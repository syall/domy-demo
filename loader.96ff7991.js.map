{"version":3,"sources":["node_modules/process/browser.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/isarray/index.js","node_modules/buffer/index.js","vs/vs/loader.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["process","module","exports","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","setTimeout","e","clearTimeout","runTimeout","fun","call","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","nextTick","args","Array","arguments","i","push","Item","array","prototype","apply","title","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","define","AMDLoader","_amdLoaderGlobal","this","_commonjsGlobal","global","Environment","_detected","_isWindows","_isNode","_isElectronRenderer","_isWebWorker","Object","defineProperty","get","_detect","enumerable","configurable","electron","type","importScripts","navigator","userAgent","indexOf","platform","LoaderEvent","detail","timestamp","LoaderEventRecorder","loaderAvailableTimestamp","_events","record","Utilities","getHighPerformanceTimestamp","getEvents","NullLoaderEventRecorder","INSTANCE","fileUriToFilePath","isWindows","uri","decodeURI","replace","test","substr","startsWith","haystack","needle","endsWith","containsQueryString","url","isAbsolutePath","forEachProperty","obj","callback","key","hasOwnProperty","isEmpty","recursiveClone","result","isArray","value","generateAnonymousModule","NEXT_ANONYMOUS_ID","isAnonymousModule","id","PERFORMANCE_NOW_PROBED","HAS_PERFORMANCE_NOW","performance","now","Date","ensureError","err","message","String","stack","ConfigurationOptionsUtil","validateConfigurationOptions","options","baseUrl","isBuild","paths","config","catchError","recordStats","urlArgs","onError","phase","console","error","moduleId","neededBy","ignoreDuplicateModules","cspNonce","nodeModules","nodeCachedData","seed","writeDelay","path","undefined","mergeConfigurationOptions","overwrite","base","key2","value2","Configuration","_env","_createIgnoreDuplicateModulesMap","_createNodeModulesMap","_createSortedPathsRules","nodeRequire","main","filename","isNode","nodeMain","dirnameIndex","Math","max","lastIndexOf","substring","ignoreDuplicateModulesMap","nodeModulesMap","create","_i","_a","nodeModule","_this","sortedPathsRules","from","to","sort","a","b","cloneAndMerge","getOptionsLiteral","_applyPaths","pathRule","j","lenJ","_addUrlArgsToUrl","_addUrlArgsIfNecessaryToUrl","_addUrlArgsIfNecessaryToUrls","urls","moduleIdToPaths","results","requireToUrl","isDuplicateMessageIgnoredFor","getConfigForModule","shouldCatchError","shouldRecordStats","OnlyOnceScriptLoader","_scriptLoader","_callbackMap","load","moduleManager","scriptSrc","errorback","isWebWorker","WorkerScriptLoader","NodeScriptLoader","BrowserScriptLoader","scriptCallbacks","triggerCallback","triggerErrorback","attachListeners","script","unbind","removeEventListener","loadEventListener","errorEventListener","addEventListener","document","createElement","setAttribute","getConfig","getElementsByTagName","appendChild","_didInitialize","_didPatchNodeRequire","_init","_fs","_vm","_path","_crypto","_initNodeRequire","that","Module","_compile","content","hashData","scriptSource","wrap","recorder","getRecorder","cachedDataPath","_getCachedDataPath","data","readFileSync","slice","cachedData","_e","Script","compileWrapper","runInThisContext","dirname","require","mod","constructor","resolve","request","_resolveFilename","mainModule","extensions","_extensions","cache","_cache","makeRequireFunction","Buffer","_handleCachedData","_verifyCachedData","opts","nodeInstrumenter","c","pieces","split","moduleExports_1","enqueueDefineAnonymousModule","normalizedScriptSrc_1","normalize","vmScriptPathOrUri_1","_getElectronRendererScriptPathOrUri","wantsCachedData_1","Boolean","cachedDataPath_1","_readSourceAndCachedData","charCodeAt","_BOM","_PREFIX","_SUFFIX","scriptOpts","_createAndEvalScript","contents","ret","globalDefineFunc","getGlobalAMDDefineFunc","receivedDefineCall","localDefineFunc","amd","getGlobalAMDRequireFunc","isElectronRenderer","driveLetterMatch","match","toUpperCase","hash","createHash","update","digest","basename","join","createCachedData","cachedDataRejected","unlink","_createAndWriteCachedData","ceil","random","lastSize","iteration","createLoop","writeFile","pow","sourcePath","source_1","cachedData_1","hashData_1","steps_1","step_1","readFile","encoding","hashDataNow","equals","warn","createScriptLoader","ModuleIdResolver","fromModuleId","lastSlash","fromModulePath","_normalizeModuleId","pattern","r","resolveModule","ROOT","strId","dependencies","moduleIdResolver","_callback","_errorback","exportsPassedIn","unresolvedDependenciesCount","_isComplete","_safeInvokeFunction","returnedValue","producedError","_invokeFactory","strModuleId","dependenciesValues","complete","onDependencyError","isComplete","ModuleIdProvider","_nextId","_strModuleIdToIntModuleId","Map","_intModuleIdToStrModuleId","getModuleId","getMaxModuleId","set","getStrModuleId","RegularDependency","EXPORTS","MODULE","REQUIRE","PluginDependency","pluginId","pluginParam","ModuleManager","scriptLoader","defineFunc","requireFunc","_loaderAvailableTimestamp","_defineFunc","_requireFunc","_moduleIdProvider","_config","_modules2","_knownModules2","_inverseDependencies2","_inversePluginDependencies2","_currentAnnonymousDefineCall","_recorder","_buildInfoPath","_buildInfoDefineStack","_buildInfoDependencies","reset","_findRelevantLocationInStack","str","normalizedPath","stackPieces","m","stackPath","stackLine","stackColumn","trimPathOffset","line","parseInt","col","getBuildInfo","resultLen","location_1","defineStack","defineLocation","shim","getLoaderEvents","defineModule","_normalizeDependencies","map","dep","_resolve","_normalizeDependency","dependency","bangIndex","strPluginId","dependencyId","_relativeRequire","synchronousRequire","_strModuleId","configure","params","shouldOverwrite","oldShouldRecordStats","_onLoad","defineCall","_createLoadError","_err","intModuleId","_onLoadError","seenModuleId","someoneNotified","queueElement","shift","inverseDeps","inverseDep","_hasDependencyPath","fromId","toId","inQueue","dependencyModule","_findCyclePath","depth","_createRequire","toUrl","getStats","__$__nodeRequire","_loadModule","lastPathIndex","loadNextPath","currentPath_1","recorder_1","_loadPluginDependency","plugin","pluginDependency","cyclePath","reverse","inversePluginDeps","_onModuleComplete","inverseDependencyId","inverseDependency","delete","DefineFunc","jQuery","_requireFunc_config","RequireFunc","init","_nodeRequire_1","what","doNotInitLoader","OVERLAY_ID","OldModule","bundle","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","every","generated","js","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","overlay","createErrorOverlay","body","getElementById","remove","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","Function","deps","cached","some","cb"],"mappings":"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","file":"loader.96ff7991.js","sourceRoot":"..","sourcesContent":["// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n/*---------------------------------------------------------------------------------------------\r\n *---------------------------------------------------------------------------------------------\r\n *---------------------------------------------------------------------------------------------\r\n *---------------------------------------------------------------------------------------------\r\n *---------------------------------------------------------------------------------------------\r\n * Please make sure to make edits in the .ts file at https://github.com/Microsoft/vscode-loader/\r\n *---------------------------------------------------------------------------------------------\r\n *---------------------------------------------------------------------------------------------\r\n *---------------------------------------------------------------------------------------------\r\n *---------------------------------------------------------------------------------------------\r\n *--------------------------------------------------------------------------------------------*/\r\nvar _amdLoaderGlobal = this;\r\nvar _commonjsGlobal = typeof global === 'object' ? global : {};\r\nvar AMDLoader;\r\n(function (AMDLoader) {\r\n    AMDLoader.global = _amdLoaderGlobal;\r\n    var Environment = /** @class */ (function () {\r\n        function Environment() {\r\n            this._detected = false;\r\n            this._isWindows = false;\r\n            this._isNode = false;\r\n            this._isElectronRenderer = false;\r\n            this._isWebWorker = false;\r\n        }\r\n        Object.defineProperty(Environment.prototype, \"isWindows\", {\r\n            get: function () {\r\n                this._detect();\r\n                return this._isWindows;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Environment.prototype, \"isNode\", {\r\n            get: function () {\r\n                this._detect();\r\n                return this._isNode;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Environment.prototype, \"isElectronRenderer\", {\r\n            get: function () {\r\n                this._detect();\r\n                return this._isElectronRenderer;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Environment.prototype, \"isWebWorker\", {\r\n            get: function () {\r\n                this._detect();\r\n                return this._isWebWorker;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Environment.prototype._detect = function () {\r\n            if (this._detected) {\r\n                return;\r\n            }\r\n            this._detected = true;\r\n            this._isWindows = Environment._isWindows();\r\n            this._isNode = (typeof module !== 'undefined' && !!module.exports);\r\n            this._isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\r\n            this._isWebWorker = (typeof AMDLoader.global.importScripts === 'function');\r\n        };\r\n        Environment._isWindows = function () {\r\n            if (typeof navigator !== 'undefined') {\r\n                if (navigator.userAgent && navigator.userAgent.indexOf('Windows') >= 0) {\r\n                    return true;\r\n                }\r\n            }\r\n            if (typeof process !== 'undefined') {\r\n                return (process.platform === 'win32');\r\n            }\r\n            return false;\r\n        };\r\n        return Environment;\r\n    }());\r\n    AMDLoader.Environment = Environment;\r\n})(AMDLoader || (AMDLoader = {}));\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar AMDLoader;\r\n(function (AMDLoader) {\r\n    var LoaderEvent = /** @class */ (function () {\r\n        function LoaderEvent(type, detail, timestamp) {\r\n            this.type = type;\r\n            this.detail = detail;\r\n            this.timestamp = timestamp;\r\n        }\r\n        return LoaderEvent;\r\n    }());\r\n    AMDLoader.LoaderEvent = LoaderEvent;\r\n    var LoaderEventRecorder = /** @class */ (function () {\r\n        function LoaderEventRecorder(loaderAvailableTimestamp) {\r\n            this._events = [new LoaderEvent(1 /* LoaderAvailable */, '', loaderAvailableTimestamp)];\r\n        }\r\n        LoaderEventRecorder.prototype.record = function (type, detail) {\r\n            this._events.push(new LoaderEvent(type, detail, AMDLoader.Utilities.getHighPerformanceTimestamp()));\r\n        };\r\n        LoaderEventRecorder.prototype.getEvents = function () {\r\n            return this._events;\r\n        };\r\n        return LoaderEventRecorder;\r\n    }());\r\n    AMDLoader.LoaderEventRecorder = LoaderEventRecorder;\r\n    var NullLoaderEventRecorder = /** @class */ (function () {\r\n        function NullLoaderEventRecorder() {\r\n        }\r\n        NullLoaderEventRecorder.prototype.record = function (type, detail) {\r\n            // Nothing to do\r\n        };\r\n        NullLoaderEventRecorder.prototype.getEvents = function () {\r\n            return [];\r\n        };\r\n        NullLoaderEventRecorder.INSTANCE = new NullLoaderEventRecorder();\r\n        return NullLoaderEventRecorder;\r\n    }());\r\n    AMDLoader.NullLoaderEventRecorder = NullLoaderEventRecorder;\r\n})(AMDLoader || (AMDLoader = {}));\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar AMDLoader;\r\n(function (AMDLoader) {\r\n    var Utilities = /** @class */ (function () {\r\n        function Utilities() {\r\n        }\r\n        /**\r\n         * This method does not take care of / vs \\\r\n         */\r\n        Utilities.fileUriToFilePath = function (isWindows, uri) {\r\n            uri = decodeURI(uri).replace(/%23/g, '#');\r\n            if (isWindows) {\r\n                if (/^file:\\/\\/\\//.test(uri)) {\r\n                    // This is a URI without a hostname => return only the path segment\r\n                    return uri.substr(8);\r\n                }\r\n                if (/^file:\\/\\//.test(uri)) {\r\n                    return uri.substr(5);\r\n                }\r\n            }\r\n            else {\r\n                if (/^file:\\/\\//.test(uri)) {\r\n                    return uri.substr(7);\r\n                }\r\n            }\r\n            // Not sure...\r\n            return uri;\r\n        };\r\n        Utilities.startsWith = function (haystack, needle) {\r\n            return haystack.length >= needle.length && haystack.substr(0, needle.length) === needle;\r\n        };\r\n        Utilities.endsWith = function (haystack, needle) {\r\n            return haystack.length >= needle.length && haystack.substr(haystack.length - needle.length) === needle;\r\n        };\r\n        // only check for \"?\" before \"#\" to ensure that there is a real Query-String\r\n        Utilities.containsQueryString = function (url) {\r\n            return /^[^\\#]*\\?/gi.test(url);\r\n        };\r\n        /**\r\n         * Does `url` start with http:// or https:// or file:// or / ?\r\n         */\r\n        Utilities.isAbsolutePath = function (url) {\r\n            return /^((http:\\/\\/)|(https:\\/\\/)|(file:\\/\\/)|(\\/))/.test(url);\r\n        };\r\n        Utilities.forEachProperty = function (obj, callback) {\r\n            if (obj) {\r\n                var key = void 0;\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        callback(key, obj[key]);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        Utilities.isEmpty = function (obj) {\r\n            var isEmpty = true;\r\n            Utilities.forEachProperty(obj, function () {\r\n                isEmpty = false;\r\n            });\r\n            return isEmpty;\r\n        };\r\n        Utilities.recursiveClone = function (obj) {\r\n            if (!obj || typeof obj !== 'object') {\r\n                return obj;\r\n            }\r\n            var result = Array.isArray(obj) ? [] : {};\r\n            Utilities.forEachProperty(obj, function (key, value) {\r\n                if (value && typeof value === 'object') {\r\n                    result[key] = Utilities.recursiveClone(value);\r\n                }\r\n                else {\r\n                    result[key] = value;\r\n                }\r\n            });\r\n            return result;\r\n        };\r\n        Utilities.generateAnonymousModule = function () {\r\n            return '===anonymous' + (Utilities.NEXT_ANONYMOUS_ID++) + '===';\r\n        };\r\n        Utilities.isAnonymousModule = function (id) {\r\n            return Utilities.startsWith(id, '===anonymous');\r\n        };\r\n        Utilities.getHighPerformanceTimestamp = function () {\r\n            if (!this.PERFORMANCE_NOW_PROBED) {\r\n                this.PERFORMANCE_NOW_PROBED = true;\r\n                this.HAS_PERFORMANCE_NOW = (AMDLoader.global.performance && typeof AMDLoader.global.performance.now === 'function');\r\n            }\r\n            return (this.HAS_PERFORMANCE_NOW ? AMDLoader.global.performance.now() : Date.now());\r\n        };\r\n        Utilities.NEXT_ANONYMOUS_ID = 1;\r\n        Utilities.PERFORMANCE_NOW_PROBED = false;\r\n        Utilities.HAS_PERFORMANCE_NOW = false;\r\n        return Utilities;\r\n    }());\r\n    AMDLoader.Utilities = Utilities;\r\n})(AMDLoader || (AMDLoader = {}));\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar AMDLoader;\r\n(function (AMDLoader) {\r\n    function ensureError(err) {\r\n        if (err instanceof Error) {\r\n            return err;\r\n        }\r\n        var result = new Error(err.message || String(err) || 'Unknown Error');\r\n        if (err.stack) {\r\n            result.stack = err.stack;\r\n        }\r\n        return result;\r\n    }\r\n    AMDLoader.ensureError = ensureError;\r\n    ;\r\n    var ConfigurationOptionsUtil = /** @class */ (function () {\r\n        function ConfigurationOptionsUtil() {\r\n        }\r\n        /**\r\n         * Ensure configuration options make sense\r\n         */\r\n        ConfigurationOptionsUtil.validateConfigurationOptions = function (options) {\r\n            function defaultOnError(err) {\r\n                if (err.phase === 'loading') {\r\n                    console.error('Loading \"' + err.moduleId + '\" failed');\r\n                    console.error(err);\r\n                    console.error('Here are the modules that depend on it:');\r\n                    console.error(err.neededBy);\r\n                    return;\r\n                }\r\n                if (err.phase === 'factory') {\r\n                    console.error('The factory method of \"' + err.moduleId + '\" has thrown an exception');\r\n                    console.error(err);\r\n                    return;\r\n                }\r\n            }\r\n            options = options || {};\r\n            if (typeof options.baseUrl !== 'string') {\r\n                options.baseUrl = '';\r\n            }\r\n            if (typeof options.isBuild !== 'boolean') {\r\n                options.isBuild = false;\r\n            }\r\n            if (typeof options.paths !== 'object') {\r\n                options.paths = {};\r\n            }\r\n            if (typeof options.config !== 'object') {\r\n                options.config = {};\r\n            }\r\n            if (typeof options.catchError === 'undefined') {\r\n                options.catchError = false;\r\n            }\r\n            if (typeof options.recordStats === 'undefined') {\r\n                options.recordStats = false;\r\n            }\r\n            if (typeof options.urlArgs !== 'string') {\r\n                options.urlArgs = '';\r\n            }\r\n            if (typeof options.onError !== 'function') {\r\n                options.onError = defaultOnError;\r\n            }\r\n            if (!Array.isArray(options.ignoreDuplicateModules)) {\r\n                options.ignoreDuplicateModules = [];\r\n            }\r\n            if (options.baseUrl.length > 0) {\r\n                if (!AMDLoader.Utilities.endsWith(options.baseUrl, '/')) {\r\n                    options.baseUrl += '/';\r\n                }\r\n            }\r\n            if (typeof options.cspNonce !== 'string') {\r\n                options.cspNonce = '';\r\n            }\r\n            if (!Array.isArray(options.nodeModules)) {\r\n                options.nodeModules = [];\r\n            }\r\n            if (options.nodeCachedData && typeof options.nodeCachedData === 'object') {\r\n                if (typeof options.nodeCachedData.seed !== 'string') {\r\n                    options.nodeCachedData.seed = 'seed';\r\n                }\r\n                if (typeof options.nodeCachedData.writeDelay !== 'number' || options.nodeCachedData.writeDelay < 0) {\r\n                    options.nodeCachedData.writeDelay = 1000 * 7;\r\n                }\r\n                if (!options.nodeCachedData.path || typeof options.nodeCachedData.path !== 'string') {\r\n                    var err = ensureError(new Error('INVALID cached data configuration, \\'path\\' MUST be set'));\r\n                    err.phase = 'configuration';\r\n                    options.onError(err);\r\n                    options.nodeCachedData = undefined;\r\n                }\r\n            }\r\n            return options;\r\n        };\r\n        ConfigurationOptionsUtil.mergeConfigurationOptions = function (overwrite, base) {\r\n            if (overwrite === void 0) { overwrite = null; }\r\n            if (base === void 0) { base = null; }\r\n            var result = AMDLoader.Utilities.recursiveClone(base || {});\r\n            // Merge known properties and overwrite the unknown ones\r\n            AMDLoader.Utilities.forEachProperty(overwrite, function (key, value) {\r\n                if (key === 'ignoreDuplicateModules' && typeof result.ignoreDuplicateModules !== 'undefined') {\r\n                    result.ignoreDuplicateModules = result.ignoreDuplicateModules.concat(value);\r\n                }\r\n                else if (key === 'paths' && typeof result.paths !== 'undefined') {\r\n                    AMDLoader.Utilities.forEachProperty(value, function (key2, value2) { return result.paths[key2] = value2; });\r\n                }\r\n                else if (key === 'config' && typeof result.config !== 'undefined') {\r\n                    AMDLoader.Utilities.forEachProperty(value, function (key2, value2) { return result.config[key2] = value2; });\r\n                }\r\n                else {\r\n                    result[key] = AMDLoader.Utilities.recursiveClone(value);\r\n                }\r\n            });\r\n            return ConfigurationOptionsUtil.validateConfigurationOptions(result);\r\n        };\r\n        return ConfigurationOptionsUtil;\r\n    }());\r\n    AMDLoader.ConfigurationOptionsUtil = ConfigurationOptionsUtil;\r\n    var Configuration = /** @class */ (function () {\r\n        function Configuration(env, options) {\r\n            this._env = env;\r\n            this.options = ConfigurationOptionsUtil.mergeConfigurationOptions(options);\r\n            this._createIgnoreDuplicateModulesMap();\r\n            this._createNodeModulesMap();\r\n            this._createSortedPathsRules();\r\n            if (this.options.baseUrl === '') {\r\n                if (this.options.nodeRequire && this.options.nodeRequire.main && this.options.nodeRequire.main.filename && this._env.isNode) {\r\n                    var nodeMain = this.options.nodeRequire.main.filename;\r\n                    var dirnameIndex = Math.max(nodeMain.lastIndexOf('/'), nodeMain.lastIndexOf('\\\\'));\r\n                    this.options.baseUrl = nodeMain.substring(0, dirnameIndex + 1);\r\n                }\r\n                if (this.options.nodeMain && this._env.isNode) {\r\n                    var nodeMain = this.options.nodeMain;\r\n                    var dirnameIndex = Math.max(nodeMain.lastIndexOf('/'), nodeMain.lastIndexOf('\\\\'));\r\n                    this.options.baseUrl = nodeMain.substring(0, dirnameIndex + 1);\r\n                }\r\n            }\r\n        }\r\n        Configuration.prototype._createIgnoreDuplicateModulesMap = function () {\r\n            // Build a map out of the ignoreDuplicateModules array\r\n            this.ignoreDuplicateModulesMap = {};\r\n            for (var i = 0; i < this.options.ignoreDuplicateModules.length; i++) {\r\n                this.ignoreDuplicateModulesMap[this.options.ignoreDuplicateModules[i]] = true;\r\n            }\r\n        };\r\n        Configuration.prototype._createNodeModulesMap = function () {\r\n            // Build a map out of nodeModules array\r\n            this.nodeModulesMap = Object.create(null);\r\n            for (var _i = 0, _a = this.options.nodeModules; _i < _a.length; _i++) {\r\n                var nodeModule = _a[_i];\r\n                this.nodeModulesMap[nodeModule] = true;\r\n            }\r\n        };\r\n        Configuration.prototype._createSortedPathsRules = function () {\r\n            var _this = this;\r\n            // Create an array our of the paths rules, sorted descending by length to\r\n            // result in a more specific -> less specific order\r\n            this.sortedPathsRules = [];\r\n            AMDLoader.Utilities.forEachProperty(this.options.paths, function (from, to) {\r\n                if (!Array.isArray(to)) {\r\n                    _this.sortedPathsRules.push({\r\n                        from: from,\r\n                        to: [to]\r\n                    });\r\n                }\r\n                else {\r\n                    _this.sortedPathsRules.push({\r\n                        from: from,\r\n                        to: to\r\n                    });\r\n                }\r\n            });\r\n            this.sortedPathsRules.sort(function (a, b) {\r\n                return b.from.length - a.from.length;\r\n            });\r\n        };\r\n        /**\r\n         * Clone current configuration and overwrite options selectively.\r\n         * @param options The selective options to overwrite with.\r\n         * @result A new configuration\r\n         */\r\n        Configuration.prototype.cloneAndMerge = function (options) {\r\n            return new Configuration(this._env, ConfigurationOptionsUtil.mergeConfigurationOptions(options, this.options));\r\n        };\r\n        /**\r\n         * Get current options bag. Useful for passing it forward to plugins.\r\n         */\r\n        Configuration.prototype.getOptionsLiteral = function () {\r\n            return this.options;\r\n        };\r\n        Configuration.prototype._applyPaths = function (moduleId) {\r\n            var pathRule;\r\n            for (var i = 0, len = this.sortedPathsRules.length; i < len; i++) {\r\n                pathRule = this.sortedPathsRules[i];\r\n                if (AMDLoader.Utilities.startsWith(moduleId, pathRule.from)) {\r\n                    var result = [];\r\n                    for (var j = 0, lenJ = pathRule.to.length; j < lenJ; j++) {\r\n                        result.push(pathRule.to[j] + moduleId.substr(pathRule.from.length));\r\n                    }\r\n                    return result;\r\n                }\r\n            }\r\n            return [moduleId];\r\n        };\r\n        Configuration.prototype._addUrlArgsToUrl = function (url) {\r\n            if (AMDLoader.Utilities.containsQueryString(url)) {\r\n                return url + '&' + this.options.urlArgs;\r\n            }\r\n            else {\r\n                return url + '?' + this.options.urlArgs;\r\n            }\r\n        };\r\n        Configuration.prototype._addUrlArgsIfNecessaryToUrl = function (url) {\r\n            if (this.options.urlArgs) {\r\n                return this._addUrlArgsToUrl(url);\r\n            }\r\n            return url;\r\n        };\r\n        Configuration.prototype._addUrlArgsIfNecessaryToUrls = function (urls) {\r\n            if (this.options.urlArgs) {\r\n                for (var i = 0, len = urls.length; i < len; i++) {\r\n                    urls[i] = this._addUrlArgsToUrl(urls[i]);\r\n                }\r\n            }\r\n            return urls;\r\n        };\r\n        /**\r\n         * Transform a module id to a location. Appends .js to module ids\r\n         */\r\n        Configuration.prototype.moduleIdToPaths = function (moduleId) {\r\n            if (this.nodeModulesMap[moduleId] === true) {\r\n                // This is a node module...\r\n                if (this.isBuild()) {\r\n                    // ...and we are at build time, drop it\r\n                    return ['empty:'];\r\n                }\r\n                else {\r\n                    // ...and at runtime we create a `shortcut`-path\r\n                    return ['node|' + moduleId];\r\n                }\r\n            }\r\n            var result = moduleId;\r\n            var results;\r\n            if (!AMDLoader.Utilities.endsWith(result, '.js') && !AMDLoader.Utilities.isAbsolutePath(result)) {\r\n                results = this._applyPaths(result);\r\n                for (var i = 0, len = results.length; i < len; i++) {\r\n                    if (this.isBuild() && results[i] === 'empty:') {\r\n                        continue;\r\n                    }\r\n                    if (!AMDLoader.Utilities.isAbsolutePath(results[i])) {\r\n                        results[i] = this.options.baseUrl + results[i];\r\n                    }\r\n                    if (!AMDLoader.Utilities.endsWith(results[i], '.js') && !AMDLoader.Utilities.containsQueryString(results[i])) {\r\n                        results[i] = results[i] + '.js';\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (!AMDLoader.Utilities.endsWith(result, '.js') && !AMDLoader.Utilities.containsQueryString(result)) {\r\n                    result = result + '.js';\r\n                }\r\n                results = [result];\r\n            }\r\n            return this._addUrlArgsIfNecessaryToUrls(results);\r\n        };\r\n        /**\r\n         * Transform a module id or url to a location.\r\n         */\r\n        Configuration.prototype.requireToUrl = function (url) {\r\n            var result = url;\r\n            if (!AMDLoader.Utilities.isAbsolutePath(result)) {\r\n                result = this._applyPaths(result)[0];\r\n                if (!AMDLoader.Utilities.isAbsolutePath(result)) {\r\n                    result = this.options.baseUrl + result;\r\n                }\r\n            }\r\n            return this._addUrlArgsIfNecessaryToUrl(result);\r\n        };\r\n        /**\r\n         * Flag to indicate if current execution is as part of a build.\r\n         */\r\n        Configuration.prototype.isBuild = function () {\r\n            return this.options.isBuild;\r\n        };\r\n        /**\r\n         * Test if module `moduleId` is expected to be defined multiple times\r\n         */\r\n        Configuration.prototype.isDuplicateMessageIgnoredFor = function (moduleId) {\r\n            return this.ignoreDuplicateModulesMap.hasOwnProperty(moduleId);\r\n        };\r\n        /**\r\n         * Get the configuration settings for the provided module id\r\n         */\r\n        Configuration.prototype.getConfigForModule = function (moduleId) {\r\n            if (this.options.config) {\r\n                return this.options.config[moduleId];\r\n            }\r\n        };\r\n        /**\r\n         * Should errors be caught when executing module factories?\r\n         */\r\n        Configuration.prototype.shouldCatchError = function () {\r\n            return this.options.catchError;\r\n        };\r\n        /**\r\n         * Should statistics be recorded?\r\n         */\r\n        Configuration.prototype.shouldRecordStats = function () {\r\n            return this.options.recordStats;\r\n        };\r\n        /**\r\n         * Forward an error to the error handler.\r\n         */\r\n        Configuration.prototype.onError = function (err) {\r\n            this.options.onError(err);\r\n        };\r\n        return Configuration;\r\n    }());\r\n    AMDLoader.Configuration = Configuration;\r\n})(AMDLoader || (AMDLoader = {}));\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar AMDLoader;\r\n(function (AMDLoader) {\r\n    /**\r\n     * Load `scriptSrc` only once (avoid multiple <script> tags)\r\n     */\r\n    var OnlyOnceScriptLoader = /** @class */ (function () {\r\n        function OnlyOnceScriptLoader(env) {\r\n            this._env = env;\r\n            this._scriptLoader = null;\r\n            this._callbackMap = {};\r\n        }\r\n        OnlyOnceScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\r\n            var _this = this;\r\n            if (!this._scriptLoader) {\r\n                this._scriptLoader = (this._env.isWebWorker\r\n                    ? new WorkerScriptLoader()\r\n                    : this._env.isNode\r\n                        ? new NodeScriptLoader(this._env)\r\n                        : new BrowserScriptLoader());\r\n            }\r\n            var scriptCallbacks = {\r\n                callback: callback,\r\n                errorback: errorback\r\n            };\r\n            if (this._callbackMap.hasOwnProperty(scriptSrc)) {\r\n                this._callbackMap[scriptSrc].push(scriptCallbacks);\r\n                return;\r\n            }\r\n            this._callbackMap[scriptSrc] = [scriptCallbacks];\r\n            this._scriptLoader.load(moduleManager, scriptSrc, function () { return _this.triggerCallback(scriptSrc); }, function (err) { return _this.triggerErrorback(scriptSrc, err); });\r\n        };\r\n        OnlyOnceScriptLoader.prototype.triggerCallback = function (scriptSrc) {\r\n            var scriptCallbacks = this._callbackMap[scriptSrc];\r\n            delete this._callbackMap[scriptSrc];\r\n            for (var i = 0; i < scriptCallbacks.length; i++) {\r\n                scriptCallbacks[i].callback();\r\n            }\r\n        };\r\n        OnlyOnceScriptLoader.prototype.triggerErrorback = function (scriptSrc, err) {\r\n            var scriptCallbacks = this._callbackMap[scriptSrc];\r\n            delete this._callbackMap[scriptSrc];\r\n            for (var i = 0; i < scriptCallbacks.length; i++) {\r\n                scriptCallbacks[i].errorback(err);\r\n            }\r\n        };\r\n        return OnlyOnceScriptLoader;\r\n    }());\r\n    var BrowserScriptLoader = /** @class */ (function () {\r\n        function BrowserScriptLoader() {\r\n        }\r\n        /**\r\n         * Attach load / error listeners to a script element and remove them when either one has fired.\r\n         * Implemented for browssers supporting HTML5 standard 'load' and 'error' events.\r\n         */\r\n        BrowserScriptLoader.prototype.attachListeners = function (script, callback, errorback) {\r\n            var unbind = function () {\r\n                script.removeEventListener('load', loadEventListener);\r\n                script.removeEventListener('error', errorEventListener);\r\n            };\r\n            var loadEventListener = function (e) {\r\n                unbind();\r\n                callback();\r\n            };\r\n            var errorEventListener = function (e) {\r\n                unbind();\r\n                errorback(e);\r\n            };\r\n            script.addEventListener('load', loadEventListener);\r\n            script.addEventListener('error', errorEventListener);\r\n        };\r\n        BrowserScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\r\n            var script = document.createElement('script');\r\n            script.setAttribute('async', 'async');\r\n            script.setAttribute('type', 'text/javascript');\r\n            this.attachListeners(script, callback, errorback);\r\n            script.setAttribute('src', scriptSrc);\r\n            // Propagate CSP nonce to dynamically created script tag.\r\n            var cspNonce = moduleManager.getConfig().getOptionsLiteral().cspNonce;\r\n            if (cspNonce) {\r\n                script.setAttribute('nonce', cspNonce);\r\n            }\r\n            document.getElementsByTagName('head')[0].appendChild(script);\r\n        };\r\n        return BrowserScriptLoader;\r\n    }());\r\n    var WorkerScriptLoader = /** @class */ (function () {\r\n        function WorkerScriptLoader() {\r\n        }\r\n        WorkerScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\r\n            try {\r\n                importScripts(scriptSrc);\r\n                callback();\r\n            }\r\n            catch (e) {\r\n                errorback(e);\r\n            }\r\n        };\r\n        return WorkerScriptLoader;\r\n    }());\r\n    var NodeScriptLoader = /** @class */ (function () {\r\n        function NodeScriptLoader(env) {\r\n            this._env = env;\r\n            this._didInitialize = false;\r\n            this._didPatchNodeRequire = false;\r\n        }\r\n        NodeScriptLoader.prototype._init = function (nodeRequire) {\r\n            if (this._didInitialize) {\r\n                return;\r\n            }\r\n            this._didInitialize = true;\r\n            // capture node modules\r\n            this._fs = nodeRequire('fs');\r\n            this._vm = nodeRequire('vm');\r\n            this._path = nodeRequire('path');\r\n            this._crypto = nodeRequire('crypto');\r\n        };\r\n        // patch require-function of nodejs such that we can manually create a script\r\n        // from cached data. this is done by overriding the `Module._compile` function\r\n        NodeScriptLoader.prototype._initNodeRequire = function (nodeRequire, moduleManager) {\r\n            // It is important to check for `nodeCachedData` first and then set `_didPatchNodeRequire`.\r\n            // That's because `nodeCachedData` is set _after_ calling this for the first time...\r\n            var nodeCachedData = moduleManager.getConfig().getOptionsLiteral().nodeCachedData;\r\n            if (!nodeCachedData) {\r\n                return;\r\n            }\r\n            if (this._didPatchNodeRequire) {\r\n                return;\r\n            }\r\n            this._didPatchNodeRequire = true;\r\n            var that = this;\r\n            var Module = nodeRequire('module');\r\n            function makeRequireFunction(mod) {\r\n                var Module = mod.constructor;\r\n                var require = function require(path) {\r\n                    try {\r\n                        return mod.require(path);\r\n                    }\r\n                    finally {\r\n                        // nothing\r\n                    }\r\n                };\r\n                require.resolve = function resolve(request) {\r\n                    return Module._resolveFilename(request, mod);\r\n                };\r\n                require.main = process.mainModule;\r\n                require.extensions = Module._extensions;\r\n                require.cache = Module._cache;\r\n                return require;\r\n            }\r\n            Module.prototype._compile = function (content, filename) {\r\n                // remove shebang and create wrapper function\r\n                var scriptSource = Module.wrap(content.replace(/^#!.*/, ''));\r\n                // create script\r\n                var recorder = moduleManager.getRecorder();\r\n                var cachedDataPath = that._getCachedDataPath(nodeCachedData, filename);\r\n                var options = { filename: filename };\r\n                var hashData;\r\n                try {\r\n                    var data = that._fs.readFileSync(cachedDataPath);\r\n                    hashData = data.slice(0, 16);\r\n                    options.cachedData = data.slice(16);\r\n                    recorder.record(60 /* CachedDataFound */, cachedDataPath);\r\n                }\r\n                catch (_e) {\r\n                    recorder.record(61 /* CachedDataMissed */, cachedDataPath);\r\n                }\r\n                var script = new that._vm.Script(scriptSource, options);\r\n                var compileWrapper = script.runInThisContext(options);\r\n                // run script\r\n                var dirname = that._path.dirname(filename);\r\n                var require = makeRequireFunction(this);\r\n                var args = [this.exports, require, this, filename, dirname, process, _commonjsGlobal, Buffer];\r\n                var result = compileWrapper.apply(this.exports, args);\r\n                // cached data aftermath\r\n                that._handleCachedData(script, scriptSource, cachedDataPath, !options.cachedData, moduleManager);\r\n                that._verifyCachedData(script, scriptSource, cachedDataPath, hashData);\r\n                return result;\r\n            };\r\n        };\r\n        NodeScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\r\n            var _this = this;\r\n            var opts = moduleManager.getConfig().getOptionsLiteral();\r\n            var nodeRequire = (opts.nodeRequire || AMDLoader.global.nodeRequire);\r\n            var nodeInstrumenter = (opts.nodeInstrumenter || function (c) { return c; });\r\n            this._init(nodeRequire);\r\n            this._initNodeRequire(nodeRequire, moduleManager);\r\n            var recorder = moduleManager.getRecorder();\r\n            if (/^node\\|/.test(scriptSrc)) {\r\n                var pieces = scriptSrc.split('|');\r\n                var moduleExports_1 = null;\r\n                try {\r\n                    moduleExports_1 = nodeRequire(pieces[1]);\r\n                }\r\n                catch (err) {\r\n                    errorback(err);\r\n                    return;\r\n                }\r\n                moduleManager.enqueueDefineAnonymousModule([], function () { return moduleExports_1; });\r\n                callback();\r\n            }\r\n            else {\r\n                scriptSrc = AMDLoader.Utilities.fileUriToFilePath(this._env.isWindows, scriptSrc);\r\n                var normalizedScriptSrc_1 = this._path.normalize(scriptSrc);\r\n                var vmScriptPathOrUri_1 = this._getElectronRendererScriptPathOrUri(normalizedScriptSrc_1);\r\n                var wantsCachedData_1 = Boolean(opts.nodeCachedData);\r\n                var cachedDataPath_1 = wantsCachedData_1 ? this._getCachedDataPath(opts.nodeCachedData, scriptSrc) : undefined;\r\n                this._readSourceAndCachedData(normalizedScriptSrc_1, cachedDataPath_1, recorder, function (err, data, cachedData, hashData) {\r\n                    if (err) {\r\n                        errorback(err);\r\n                        return;\r\n                    }\r\n                    var scriptSource;\r\n                    if (data.charCodeAt(0) === NodeScriptLoader._BOM) {\r\n                        scriptSource = NodeScriptLoader._PREFIX + data.substring(1) + NodeScriptLoader._SUFFIX;\r\n                    }\r\n                    else {\r\n                        scriptSource = NodeScriptLoader._PREFIX + data + NodeScriptLoader._SUFFIX;\r\n                    }\r\n                    scriptSource = nodeInstrumenter(scriptSource, normalizedScriptSrc_1);\r\n                    var scriptOpts = { filename: vmScriptPathOrUri_1, cachedData: cachedData };\r\n                    var script = _this._createAndEvalScript(moduleManager, scriptSource, scriptOpts, callback, errorback);\r\n                    _this._handleCachedData(script, scriptSource, cachedDataPath_1, wantsCachedData_1 && !cachedData, moduleManager);\r\n                    _this._verifyCachedData(script, scriptSource, cachedDataPath_1, hashData);\r\n                });\r\n            }\r\n        };\r\n        NodeScriptLoader.prototype._createAndEvalScript = function (moduleManager, contents, options, callback, errorback) {\r\n            var recorder = moduleManager.getRecorder();\r\n            recorder.record(31 /* NodeBeginEvaluatingScript */, options.filename);\r\n            var script = new this._vm.Script(contents, options);\r\n            var ret = script.runInThisContext(options);\r\n            var globalDefineFunc = moduleManager.getGlobalAMDDefineFunc();\r\n            var receivedDefineCall = false;\r\n            var localDefineFunc = function () {\r\n                receivedDefineCall = true;\r\n                return globalDefineFunc.apply(null, arguments);\r\n            };\r\n            localDefineFunc.amd = globalDefineFunc.amd;\r\n            ret.call(AMDLoader.global, moduleManager.getGlobalAMDRequireFunc(), localDefineFunc, options.filename, this._path.dirname(options.filename));\r\n            recorder.record(32 /* NodeEndEvaluatingScript */, options.filename);\r\n            if (receivedDefineCall) {\r\n                callback();\r\n            }\r\n            else {\r\n                errorback(new Error(\"Didn't receive define call in \" + options.filename + \"!\"));\r\n            }\r\n            return script;\r\n        };\r\n        NodeScriptLoader.prototype._getElectronRendererScriptPathOrUri = function (path) {\r\n            if (!this._env.isElectronRenderer) {\r\n                return path;\r\n            }\r\n            var driveLetterMatch = path.match(/^([a-z])\\:(.*)/i);\r\n            if (driveLetterMatch) {\r\n                // windows\r\n                return \"file:///\" + (driveLetterMatch[1].toUpperCase() + ':' + driveLetterMatch[2]).replace(/\\\\/g, '/');\r\n            }\r\n            else {\r\n                // nix\r\n                return \"file://\" + path;\r\n            }\r\n        };\r\n        NodeScriptLoader.prototype._getCachedDataPath = function (config, filename) {\r\n            var hash = this._crypto.createHash('md5').update(filename, 'utf8').update(config.seed, 'utf8').digest('hex');\r\n            var basename = this._path.basename(filename).replace(/\\.js$/, '');\r\n            return this._path.join(config.path, basename + \"-\" + hash + \".code\");\r\n        };\r\n        NodeScriptLoader.prototype._handleCachedData = function (script, scriptSource, cachedDataPath, createCachedData, moduleManager) {\r\n            var _this = this;\r\n            if (script.cachedDataRejected) {\r\n                // cached data got rejected -> delete and re-create\r\n                this._fs.unlink(cachedDataPath, function (err) {\r\n                    moduleManager.getRecorder().record(62 /* CachedDataRejected */, cachedDataPath);\r\n                    _this._createAndWriteCachedData(script, scriptSource, cachedDataPath, moduleManager);\r\n                    if (err) {\r\n                        moduleManager.getConfig().onError(err);\r\n                    }\r\n                });\r\n            }\r\n            else if (createCachedData) {\r\n                // no cached data, but wanted\r\n                this._createAndWriteCachedData(script, scriptSource, cachedDataPath, moduleManager);\r\n            }\r\n        };\r\n        // Cached data format: | SOURCE_HASH | V8_CACHED_DATA |\r\n        // -SOURCE_HASH is the md5 hash of the JS source (always 16 bytes)\r\n        // -V8_CACHED_DATA is what v8 produces\r\n        NodeScriptLoader.prototype._createAndWriteCachedData = function (script, scriptSource, cachedDataPath, moduleManager) {\r\n            var _this = this;\r\n            var timeout = Math.ceil(moduleManager.getConfig().getOptionsLiteral().nodeCachedData.writeDelay * (1 + Math.random()));\r\n            var lastSize = -1;\r\n            var iteration = 0;\r\n            var hashData = undefined;\r\n            var createLoop = function () {\r\n                setTimeout(function () {\r\n                    if (!hashData) {\r\n                        hashData = _this._crypto.createHash('md5').update(scriptSource, 'utf8').digest();\r\n                    }\r\n                    var cachedData = script.createCachedData();\r\n                    if (cachedData.length === 0 || cachedData.length === lastSize || iteration >= 5) {\r\n                        return;\r\n                    }\r\n                    lastSize = cachedData.length;\r\n                    _this._fs.writeFile(cachedDataPath, Buffer.concat([hashData, cachedData]), function (err) {\r\n                        if (err) {\r\n                            moduleManager.getConfig().onError(err);\r\n                        }\r\n                        moduleManager.getRecorder().record(63 /* CachedDataCreated */, cachedDataPath);\r\n                        createLoop();\r\n                    });\r\n                }, timeout * (Math.pow(4, iteration++)));\r\n            };\r\n            // with some delay (`timeout`) create cached data\r\n            // and repeat that (with backoff delay) until the\r\n            // data seems to be not changing anymore\r\n            createLoop();\r\n        };\r\n        NodeScriptLoader.prototype._readSourceAndCachedData = function (sourcePath, cachedDataPath, recorder, callback) {\r\n            if (!cachedDataPath) {\r\n                // no cached data case\r\n                this._fs.readFile(sourcePath, { encoding: 'utf8' }, callback);\r\n            }\r\n            else {\r\n                // cached data case: read both files in parallel\r\n                var source_1 = undefined;\r\n                var cachedData_1 = undefined;\r\n                var hashData_1 = undefined;\r\n                var steps_1 = 2;\r\n                var step_1 = function (err) {\r\n                    if (err) {\r\n                        callback(err);\r\n                    }\r\n                    else if (--steps_1 === 0) {\r\n                        callback(undefined, source_1, cachedData_1, hashData_1);\r\n                    }\r\n                };\r\n                this._fs.readFile(sourcePath, { encoding: 'utf8' }, function (err, data) {\r\n                    source_1 = data;\r\n                    step_1(err);\r\n                });\r\n                this._fs.readFile(cachedDataPath, function (err, data) {\r\n                    if (!err && data && data.length > 0) {\r\n                        hashData_1 = data.slice(0, 16);\r\n                        cachedData_1 = data.slice(16);\r\n                        recorder.record(60 /* CachedDataFound */, cachedDataPath);\r\n                    }\r\n                    else {\r\n                        recorder.record(61 /* CachedDataMissed */, cachedDataPath);\r\n                    }\r\n                    step_1(); // ignored: cached data is optional\r\n                });\r\n            }\r\n        };\r\n        NodeScriptLoader.prototype._verifyCachedData = function (script, scriptSource, cachedDataPath, hashData) {\r\n            var _this = this;\r\n            if (!hashData) {\r\n                // nothing to do\r\n                return;\r\n            }\r\n            if (script.cachedDataRejected) {\r\n                // invalid anyways\r\n                return;\r\n            }\r\n            setTimeout(function () {\r\n                // check source hash - the contract is that file paths change when file content\r\n                // change (e.g use the commit or version id as cache path). this check is\r\n                // for violations of this contract.\r\n                var hashDataNow = _this._crypto.createHash('md5').update(scriptSource, 'utf8').digest();\r\n                if (!hashData.equals(hashDataNow)) {\r\n                    console.warn(\"FAILED TO VERIFY CACHED DATA. Deleting '\" + cachedDataPath + \"' now, but a RESTART IS REQUIRED\");\r\n                    _this._fs.unlink(cachedDataPath, function (err) { return console.error(\"FAILED to unlink: '\" + cachedDataPath + \"'\", err); });\r\n                }\r\n            }, Math.ceil(5000 * (1 + Math.random())));\r\n        };\r\n        NodeScriptLoader._BOM = 0xFEFF;\r\n        NodeScriptLoader._PREFIX = '(function (require, define, __filename, __dirname) { ';\r\n        NodeScriptLoader._SUFFIX = '\\n});';\r\n        return NodeScriptLoader;\r\n    }());\r\n    function createScriptLoader(env) {\r\n        return new OnlyOnceScriptLoader(env);\r\n    }\r\n    AMDLoader.createScriptLoader = createScriptLoader;\r\n})(AMDLoader || (AMDLoader = {}));\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar AMDLoader;\r\n(function (AMDLoader) {\r\n    // ------------------------------------------------------------------------\r\n    // ModuleIdResolver\r\n    var ModuleIdResolver = /** @class */ (function () {\r\n        function ModuleIdResolver(fromModuleId) {\r\n            var lastSlash = fromModuleId.lastIndexOf('/');\r\n            if (lastSlash !== -1) {\r\n                this.fromModulePath = fromModuleId.substr(0, lastSlash + 1);\r\n            }\r\n            else {\r\n                this.fromModulePath = '';\r\n            }\r\n        }\r\n        /**\r\n         * Normalize 'a/../name' to 'name', etc.\r\n         */\r\n        ModuleIdResolver._normalizeModuleId = function (moduleId) {\r\n            var r = moduleId, pattern;\r\n            // replace /./ => /\r\n            pattern = /\\/\\.\\//;\r\n            while (pattern.test(r)) {\r\n                r = r.replace(pattern, '/');\r\n            }\r\n            // replace ^./ => nothing\r\n            r = r.replace(/^\\.\\//g, '');\r\n            // replace /aa/../ => / (BUT IGNORE /../../)\r\n            pattern = /\\/(([^\\/])|([^\\/][^\\/\\.])|([^\\/\\.][^\\/])|([^\\/][^\\/][^\\/]+))\\/\\.\\.\\//;\r\n            while (pattern.test(r)) {\r\n                r = r.replace(pattern, '/');\r\n            }\r\n            // replace ^aa/../ => nothing (BUT IGNORE ../../)\r\n            r = r.replace(/^(([^\\/])|([^\\/][^\\/\\.])|([^\\/\\.][^\\/])|([^\\/][^\\/][^\\/]+))\\/\\.\\.\\//, '');\r\n            return r;\r\n        };\r\n        /**\r\n         * Resolve relative module ids\r\n         */\r\n        ModuleIdResolver.prototype.resolveModule = function (moduleId) {\r\n            var result = moduleId;\r\n            if (!AMDLoader.Utilities.isAbsolutePath(result)) {\r\n                if (AMDLoader.Utilities.startsWith(result, './') || AMDLoader.Utilities.startsWith(result, '../')) {\r\n                    result = ModuleIdResolver._normalizeModuleId(this.fromModulePath + result);\r\n                }\r\n            }\r\n            return result;\r\n        };\r\n        ModuleIdResolver.ROOT = new ModuleIdResolver('');\r\n        return ModuleIdResolver;\r\n    }());\r\n    AMDLoader.ModuleIdResolver = ModuleIdResolver;\r\n    // ------------------------------------------------------------------------\r\n    // Module\r\n    var Module = /** @class */ (function () {\r\n        function Module(id, strId, dependencies, callback, errorback, moduleIdResolver) {\r\n            this.id = id;\r\n            this.strId = strId;\r\n            this.dependencies = dependencies;\r\n            this._callback = callback;\r\n            this._errorback = errorback;\r\n            this.moduleIdResolver = moduleIdResolver;\r\n            this.exports = {};\r\n            this.error = null;\r\n            this.exportsPassedIn = false;\r\n            this.unresolvedDependenciesCount = this.dependencies.length;\r\n            this._isComplete = false;\r\n        }\r\n        Module._safeInvokeFunction = function (callback, args) {\r\n            try {\r\n                return {\r\n                    returnedValue: callback.apply(AMDLoader.global, args),\r\n                    producedError: null\r\n                };\r\n            }\r\n            catch (e) {\r\n                return {\r\n                    returnedValue: null,\r\n                    producedError: e\r\n                };\r\n            }\r\n        };\r\n        Module._invokeFactory = function (config, strModuleId, callback, dependenciesValues) {\r\n            if (config.isBuild() && !AMDLoader.Utilities.isAnonymousModule(strModuleId)) {\r\n                return {\r\n                    returnedValue: null,\r\n                    producedError: null\r\n                };\r\n            }\r\n            if (config.shouldCatchError()) {\r\n                return this._safeInvokeFunction(callback, dependenciesValues);\r\n            }\r\n            return {\r\n                returnedValue: callback.apply(AMDLoader.global, dependenciesValues),\r\n                producedError: null\r\n            };\r\n        };\r\n        Module.prototype.complete = function (recorder, config, dependenciesValues) {\r\n            this._isComplete = true;\r\n            var producedError = null;\r\n            if (this._callback) {\r\n                if (typeof this._callback === 'function') {\r\n                    recorder.record(21 /* BeginInvokeFactory */, this.strId);\r\n                    var r = Module._invokeFactory(config, this.strId, this._callback, dependenciesValues);\r\n                    producedError = r.producedError;\r\n                    recorder.record(22 /* EndInvokeFactory */, this.strId);\r\n                    if (!producedError && typeof r.returnedValue !== 'undefined' && (!this.exportsPassedIn || AMDLoader.Utilities.isEmpty(this.exports))) {\r\n                        this.exports = r.returnedValue;\r\n                    }\r\n                }\r\n                else {\r\n                    this.exports = this._callback;\r\n                }\r\n            }\r\n            if (producedError) {\r\n                var err = AMDLoader.ensureError(producedError);\r\n                err.phase = 'factory';\r\n                err.moduleId = this.strId;\r\n                this.error = err;\r\n                config.onError(err);\r\n            }\r\n            this.dependencies = null;\r\n            this._callback = null;\r\n            this._errorback = null;\r\n            this.moduleIdResolver = null;\r\n        };\r\n        /**\r\n         * One of the direct dependencies or a transitive dependency has failed to load.\r\n         */\r\n        Module.prototype.onDependencyError = function (err) {\r\n            this._isComplete = true;\r\n            this.error = err;\r\n            if (this._errorback) {\r\n                this._errorback(err);\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n        /**\r\n         * Is the current module complete?\r\n         */\r\n        Module.prototype.isComplete = function () {\r\n            return this._isComplete;\r\n        };\r\n        return Module;\r\n    }());\r\n    AMDLoader.Module = Module;\r\n    var ModuleIdProvider = /** @class */ (function () {\r\n        function ModuleIdProvider() {\r\n            this._nextId = 0;\r\n            this._strModuleIdToIntModuleId = new Map();\r\n            this._intModuleIdToStrModuleId = [];\r\n            // Ensure values 0, 1, 2 are assigned accordingly with ModuleId\r\n            this.getModuleId('exports');\r\n            this.getModuleId('module');\r\n            this.getModuleId('require');\r\n        }\r\n        ModuleIdProvider.prototype.getMaxModuleId = function () {\r\n            return this._nextId;\r\n        };\r\n        ModuleIdProvider.prototype.getModuleId = function (strModuleId) {\r\n            var id = this._strModuleIdToIntModuleId.get(strModuleId);\r\n            if (typeof id === 'undefined') {\r\n                id = this._nextId++;\r\n                this._strModuleIdToIntModuleId.set(strModuleId, id);\r\n                this._intModuleIdToStrModuleId[id] = strModuleId;\r\n            }\r\n            return id;\r\n        };\r\n        ModuleIdProvider.prototype.getStrModuleId = function (moduleId) {\r\n            return this._intModuleIdToStrModuleId[moduleId];\r\n        };\r\n        return ModuleIdProvider;\r\n    }());\r\n    var RegularDependency = /** @class */ (function () {\r\n        function RegularDependency(id) {\r\n            this.id = id;\r\n        }\r\n        RegularDependency.EXPORTS = new RegularDependency(0 /* EXPORTS */);\r\n        RegularDependency.MODULE = new RegularDependency(1 /* MODULE */);\r\n        RegularDependency.REQUIRE = new RegularDependency(2 /* REQUIRE */);\r\n        return RegularDependency;\r\n    }());\r\n    AMDLoader.RegularDependency = RegularDependency;\r\n    var PluginDependency = /** @class */ (function () {\r\n        function PluginDependency(id, pluginId, pluginParam) {\r\n            this.id = id;\r\n            this.pluginId = pluginId;\r\n            this.pluginParam = pluginParam;\r\n        }\r\n        return PluginDependency;\r\n    }());\r\n    AMDLoader.PluginDependency = PluginDependency;\r\n    var ModuleManager = /** @class */ (function () {\r\n        function ModuleManager(env, scriptLoader, defineFunc, requireFunc, loaderAvailableTimestamp) {\r\n            if (loaderAvailableTimestamp === void 0) { loaderAvailableTimestamp = 0; }\r\n            this._env = env;\r\n            this._scriptLoader = scriptLoader;\r\n            this._loaderAvailableTimestamp = loaderAvailableTimestamp;\r\n            this._defineFunc = defineFunc;\r\n            this._requireFunc = requireFunc;\r\n            this._moduleIdProvider = new ModuleIdProvider();\r\n            this._config = new AMDLoader.Configuration(this._env);\r\n            this._modules2 = [];\r\n            this._knownModules2 = [];\r\n            this._inverseDependencies2 = [];\r\n            this._inversePluginDependencies2 = new Map();\r\n            this._currentAnnonymousDefineCall = null;\r\n            this._recorder = null;\r\n            this._buildInfoPath = [];\r\n            this._buildInfoDefineStack = [];\r\n            this._buildInfoDependencies = [];\r\n        }\r\n        ModuleManager.prototype.reset = function () {\r\n            return new ModuleManager(this._env, this._scriptLoader, this._defineFunc, this._requireFunc, this._loaderAvailableTimestamp);\r\n        };\r\n        ModuleManager.prototype.getGlobalAMDDefineFunc = function () {\r\n            return this._defineFunc;\r\n        };\r\n        ModuleManager.prototype.getGlobalAMDRequireFunc = function () {\r\n            return this._requireFunc;\r\n        };\r\n        ModuleManager._findRelevantLocationInStack = function (needle, stack) {\r\n            var normalize = function (str) { return str.replace(/\\\\/g, '/'); };\r\n            var normalizedPath = normalize(needle);\r\n            var stackPieces = stack.split(/\\n/);\r\n            for (var i = 0; i < stackPieces.length; i++) {\r\n                var m = stackPieces[i].match(/(.*):(\\d+):(\\d+)\\)?$/);\r\n                if (m) {\r\n                    var stackPath = m[1];\r\n                    var stackLine = m[2];\r\n                    var stackColumn = m[3];\r\n                    var trimPathOffset = Math.max(stackPath.lastIndexOf(' ') + 1, stackPath.lastIndexOf('(') + 1);\r\n                    stackPath = stackPath.substr(trimPathOffset);\r\n                    stackPath = normalize(stackPath);\r\n                    if (stackPath === normalizedPath) {\r\n                        var r = {\r\n                            line: parseInt(stackLine, 10),\r\n                            col: parseInt(stackColumn, 10)\r\n                        };\r\n                        if (r.line === 1) {\r\n                            r.col -= '(function (require, define, __filename, __dirname) { '.length;\r\n                        }\r\n                        return r;\r\n                    }\r\n                }\r\n            }\r\n            throw new Error('Could not correlate define call site for needle ' + needle);\r\n        };\r\n        ModuleManager.prototype.getBuildInfo = function () {\r\n            if (!this._config.isBuild()) {\r\n                return null;\r\n            }\r\n            var result = [], resultLen = 0;\r\n            for (var i = 0, len = this._modules2.length; i < len; i++) {\r\n                var m = this._modules2[i];\r\n                if (!m) {\r\n                    continue;\r\n                }\r\n                var location_1 = this._buildInfoPath[m.id] || null;\r\n                var defineStack = this._buildInfoDefineStack[m.id] || null;\r\n                var dependencies = this._buildInfoDependencies[m.id];\r\n                result[resultLen++] = {\r\n                    id: m.strId,\r\n                    path: location_1,\r\n                    defineLocation: (location_1 && defineStack ? ModuleManager._findRelevantLocationInStack(location_1, defineStack) : null),\r\n                    dependencies: dependencies,\r\n                    shim: null,\r\n                    exports: m.exports\r\n                };\r\n            }\r\n            return result;\r\n        };\r\n        ModuleManager.prototype.getRecorder = function () {\r\n            if (!this._recorder) {\r\n                if (this._config.shouldRecordStats()) {\r\n                    this._recorder = new AMDLoader.LoaderEventRecorder(this._loaderAvailableTimestamp);\r\n                }\r\n                else {\r\n                    this._recorder = AMDLoader.NullLoaderEventRecorder.INSTANCE;\r\n                }\r\n            }\r\n            return this._recorder;\r\n        };\r\n        ModuleManager.prototype.getLoaderEvents = function () {\r\n            return this.getRecorder().getEvents();\r\n        };\r\n        /**\r\n         * Defines an anonymous module (without an id). Its name will be resolved as we receive a callback from the scriptLoader.\r\n         * @param dependecies @see defineModule\r\n         * @param callback @see defineModule\r\n         */\r\n        ModuleManager.prototype.enqueueDefineAnonymousModule = function (dependencies, callback) {\r\n            if (this._currentAnnonymousDefineCall !== null) {\r\n                throw new Error('Can only have one anonymous define call per script file');\r\n            }\r\n            var stack = null;\r\n            if (this._config.isBuild()) {\r\n                stack = new Error('StackLocation').stack || null;\r\n            }\r\n            this._currentAnnonymousDefineCall = {\r\n                stack: stack,\r\n                dependencies: dependencies,\r\n                callback: callback\r\n            };\r\n        };\r\n        /**\r\n         * Creates a module and stores it in _modules. The manager will immediately begin resolving its dependencies.\r\n         * @param strModuleId An unique and absolute id of the module. This must not collide with another module's id\r\n         * @param dependencies An array with the dependencies of the module. Special keys are: \"require\", \"exports\" and \"module\"\r\n         * @param callback if callback is a function, it will be called with the resolved dependencies. if callback is an object, it will be considered as the exports of the module.\r\n         */\r\n        ModuleManager.prototype.defineModule = function (strModuleId, dependencies, callback, errorback, stack, moduleIdResolver) {\r\n            var _this = this;\r\n            if (moduleIdResolver === void 0) { moduleIdResolver = new ModuleIdResolver(strModuleId); }\r\n            var moduleId = this._moduleIdProvider.getModuleId(strModuleId);\r\n            if (this._modules2[moduleId]) {\r\n                if (!this._config.isDuplicateMessageIgnoredFor(strModuleId)) {\r\n                    console.warn('Duplicate definition of module \\'' + strModuleId + '\\'');\r\n                }\r\n                // Super important! Completely ignore duplicate module definition\r\n                return;\r\n            }\r\n            var m = new Module(moduleId, strModuleId, this._normalizeDependencies(dependencies, moduleIdResolver), callback, errorback, moduleIdResolver);\r\n            this._modules2[moduleId] = m;\r\n            if (this._config.isBuild()) {\r\n                this._buildInfoDefineStack[moduleId] = stack;\r\n                this._buildInfoDependencies[moduleId] = (m.dependencies || []).map(function (dep) { return _this._moduleIdProvider.getStrModuleId(dep.id); });\r\n            }\r\n            // Resolving of dependencies is immediate (not in a timeout). If there's a need to support a packer that concatenates in an\r\n            // unordered manner, in order to finish processing the file, execute the following method in a timeout\r\n            this._resolve(m);\r\n        };\r\n        ModuleManager.prototype._normalizeDependency = function (dependency, moduleIdResolver) {\r\n            if (dependency === 'exports') {\r\n                return RegularDependency.EXPORTS;\r\n            }\r\n            if (dependency === 'module') {\r\n                return RegularDependency.MODULE;\r\n            }\r\n            if (dependency === 'require') {\r\n                return RegularDependency.REQUIRE;\r\n            }\r\n            // Normalize dependency and then request it from the manager\r\n            var bangIndex = dependency.indexOf('!');\r\n            if (bangIndex >= 0) {\r\n                var strPluginId = moduleIdResolver.resolveModule(dependency.substr(0, bangIndex));\r\n                var pluginParam = moduleIdResolver.resolveModule(dependency.substr(bangIndex + 1));\r\n                var dependencyId = this._moduleIdProvider.getModuleId(strPluginId + '!' + pluginParam);\r\n                var pluginId = this._moduleIdProvider.getModuleId(strPluginId);\r\n                return new PluginDependency(dependencyId, pluginId, pluginParam);\r\n            }\r\n            return new RegularDependency(this._moduleIdProvider.getModuleId(moduleIdResolver.resolveModule(dependency)));\r\n        };\r\n        ModuleManager.prototype._normalizeDependencies = function (dependencies, moduleIdResolver) {\r\n            var result = [], resultLen = 0;\r\n            for (var i = 0, len = dependencies.length; i < len; i++) {\r\n                result[resultLen++] = this._normalizeDependency(dependencies[i], moduleIdResolver);\r\n            }\r\n            return result;\r\n        };\r\n        ModuleManager.prototype._relativeRequire = function (moduleIdResolver, dependencies, callback, errorback) {\r\n            if (typeof dependencies === 'string') {\r\n                return this.synchronousRequire(dependencies, moduleIdResolver);\r\n            }\r\n            this.defineModule(AMDLoader.Utilities.generateAnonymousModule(), dependencies, callback, errorback, null, moduleIdResolver);\r\n        };\r\n        /**\r\n         * Require synchronously a module by its absolute id. If the module is not loaded, an exception will be thrown.\r\n         * @param id The unique and absolute id of the required module\r\n         * @return The exports of module 'id'\r\n         */\r\n        ModuleManager.prototype.synchronousRequire = function (_strModuleId, moduleIdResolver) {\r\n            if (moduleIdResolver === void 0) { moduleIdResolver = new ModuleIdResolver(_strModuleId); }\r\n            var dependency = this._normalizeDependency(_strModuleId, moduleIdResolver);\r\n            var m = this._modules2[dependency.id];\r\n            if (!m) {\r\n                throw new Error('Check dependency list! Synchronous require cannot resolve module \\'' + _strModuleId + '\\'. This is the first mention of this module!');\r\n            }\r\n            if (!m.isComplete()) {\r\n                throw new Error('Check dependency list! Synchronous require cannot resolve module \\'' + _strModuleId + '\\'. This module has not been resolved completely yet.');\r\n            }\r\n            if (m.error) {\r\n                throw m.error;\r\n            }\r\n            return m.exports;\r\n        };\r\n        ModuleManager.prototype.configure = function (params, shouldOverwrite) {\r\n            var oldShouldRecordStats = this._config.shouldRecordStats();\r\n            if (shouldOverwrite) {\r\n                this._config = new AMDLoader.Configuration(this._env, params);\r\n            }\r\n            else {\r\n                this._config = this._config.cloneAndMerge(params);\r\n            }\r\n            if (this._config.shouldRecordStats() && !oldShouldRecordStats) {\r\n                this._recorder = null;\r\n            }\r\n        };\r\n        ModuleManager.prototype.getConfig = function () {\r\n            return this._config;\r\n        };\r\n        /**\r\n         * Callback from the scriptLoader when a module has been loaded.\r\n         * This means its code is available and has been executed.\r\n         */\r\n        ModuleManager.prototype._onLoad = function (moduleId) {\r\n            if (this._currentAnnonymousDefineCall !== null) {\r\n                var defineCall = this._currentAnnonymousDefineCall;\r\n                this._currentAnnonymousDefineCall = null;\r\n                // Hit an anonymous define call\r\n                this.defineModule(this._moduleIdProvider.getStrModuleId(moduleId), defineCall.dependencies, defineCall.callback, null, defineCall.stack);\r\n            }\r\n        };\r\n        ModuleManager.prototype._createLoadError = function (moduleId, _err) {\r\n            var _this = this;\r\n            var strModuleId = this._moduleIdProvider.getStrModuleId(moduleId);\r\n            var neededBy = (this._inverseDependencies2[moduleId] || []).map(function (intModuleId) { return _this._moduleIdProvider.getStrModuleId(intModuleId); });\r\n            var err = AMDLoader.ensureError(_err);\r\n            err.phase = 'loading';\r\n            err.moduleId = strModuleId;\r\n            err.neededBy = neededBy;\r\n            return err;\r\n        };\r\n        /**\r\n         * Callback from the scriptLoader when a module hasn't been loaded.\r\n         * This means that the script was not found (e.g. 404) or there was an error in the script.\r\n         */\r\n        ModuleManager.prototype._onLoadError = function (moduleId, err) {\r\n            var error = this._createLoadError(moduleId, err);\r\n            if (!this._modules2[moduleId]) {\r\n                this._modules2[moduleId] = new Module(moduleId, this._moduleIdProvider.getStrModuleId(moduleId), [], function () { }, function () { }, null);\r\n            }\r\n            // Find any 'local' error handlers, walk the entire chain of inverse dependencies if necessary.\r\n            var seenModuleId = [];\r\n            for (var i = 0, len = this._moduleIdProvider.getMaxModuleId(); i < len; i++) {\r\n                seenModuleId[i] = false;\r\n            }\r\n            var someoneNotified = false;\r\n            var queue = [];\r\n            queue.push(moduleId);\r\n            seenModuleId[moduleId] = true;\r\n            while (queue.length > 0) {\r\n                var queueElement = queue.shift();\r\n                var m = this._modules2[queueElement];\r\n                if (m) {\r\n                    someoneNotified = m.onDependencyError(error) || someoneNotified;\r\n                }\r\n                var inverseDeps = this._inverseDependencies2[queueElement];\r\n                if (inverseDeps) {\r\n                    for (var i = 0, len = inverseDeps.length; i < len; i++) {\r\n                        var inverseDep = inverseDeps[i];\r\n                        if (!seenModuleId[inverseDep]) {\r\n                            queue.push(inverseDep);\r\n                            seenModuleId[inverseDep] = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (!someoneNotified) {\r\n                this._config.onError(error);\r\n            }\r\n        };\r\n        /**\r\n         * Walks (recursively) the dependencies of 'from' in search of 'to'.\r\n         * Returns true if there is such a path or false otherwise.\r\n         * @param from Module id to start at\r\n         * @param to Module id to look for\r\n         */\r\n        ModuleManager.prototype._hasDependencyPath = function (fromId, toId) {\r\n            var from = this._modules2[fromId];\r\n            if (!from) {\r\n                return false;\r\n            }\r\n            var inQueue = [];\r\n            for (var i = 0, len = this._moduleIdProvider.getMaxModuleId(); i < len; i++) {\r\n                inQueue[i] = false;\r\n            }\r\n            var queue = [];\r\n            // Insert 'from' in queue\r\n            queue.push(from);\r\n            inQueue[fromId] = true;\r\n            while (queue.length > 0) {\r\n                // Pop first inserted element of queue\r\n                var element = queue.shift();\r\n                var dependencies = element.dependencies;\r\n                if (dependencies) {\r\n                    // Walk the element's dependencies\r\n                    for (var i = 0, len = dependencies.length; i < len; i++) {\r\n                        var dependency = dependencies[i];\r\n                        if (dependency.id === toId) {\r\n                            // There is a path to 'to'\r\n                            return true;\r\n                        }\r\n                        var dependencyModule = this._modules2[dependency.id];\r\n                        if (dependencyModule && !inQueue[dependency.id]) {\r\n                            // Insert 'dependency' in queue\r\n                            inQueue[dependency.id] = true;\r\n                            queue.push(dependencyModule);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // There is no path to 'to'\r\n            return false;\r\n        };\r\n        /**\r\n         * Walks (recursively) the dependencies of 'from' in search of 'to'.\r\n         * Returns cycle as array.\r\n         * @param from Module id to start at\r\n         * @param to Module id to look for\r\n         */\r\n        ModuleManager.prototype._findCyclePath = function (fromId, toId, depth) {\r\n            if (fromId === toId || depth === 50) {\r\n                return [fromId];\r\n            }\r\n            var from = this._modules2[fromId];\r\n            if (!from) {\r\n                return null;\r\n            }\r\n            // Walk the element's dependencies\r\n            var dependencies = from.dependencies;\r\n            if (dependencies) {\r\n                for (var i = 0, len = dependencies.length; i < len; i++) {\r\n                    var path = this._findCyclePath(dependencies[i].id, toId, depth + 1);\r\n                    if (path !== null) {\r\n                        path.push(fromId);\r\n                        return path;\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        /**\r\n         * Create the local 'require' that is passed into modules\r\n         */\r\n        ModuleManager.prototype._createRequire = function (moduleIdResolver) {\r\n            var _this = this;\r\n            var result = (function (dependencies, callback, errorback) {\r\n                return _this._relativeRequire(moduleIdResolver, dependencies, callback, errorback);\r\n            });\r\n            result.toUrl = function (id) {\r\n                return _this._config.requireToUrl(moduleIdResolver.resolveModule(id));\r\n            };\r\n            result.getStats = function () {\r\n                return _this.getLoaderEvents();\r\n            };\r\n            result.__$__nodeRequire = AMDLoader.global.nodeRequire;\r\n            return result;\r\n        };\r\n        ModuleManager.prototype._loadModule = function (moduleId) {\r\n            var _this = this;\r\n            if (this._modules2[moduleId] || this._knownModules2[moduleId]) {\r\n                // known module\r\n                return;\r\n            }\r\n            this._knownModules2[moduleId] = true;\r\n            var strModuleId = this._moduleIdProvider.getStrModuleId(moduleId);\r\n            var paths = this._config.moduleIdToPaths(strModuleId);\r\n            var scopedPackageRegex = /^@[^\\/]+\\/[^\\/]+$/; // matches @scope/package-name\r\n            if (this._env.isNode && (strModuleId.indexOf('/') === -1 || scopedPackageRegex.test(strModuleId))) {\r\n                paths.push('node|' + strModuleId);\r\n            }\r\n            var lastPathIndex = -1;\r\n            var loadNextPath = function (err) {\r\n                lastPathIndex++;\r\n                if (lastPathIndex >= paths.length) {\r\n                    // No more paths to try\r\n                    _this._onLoadError(moduleId, err);\r\n                }\r\n                else {\r\n                    var currentPath_1 = paths[lastPathIndex];\r\n                    var recorder_1 = _this.getRecorder();\r\n                    if (_this._config.isBuild() && currentPath_1 === 'empty:') {\r\n                        _this._buildInfoPath[moduleId] = currentPath_1;\r\n                        _this.defineModule(_this._moduleIdProvider.getStrModuleId(moduleId), [], null, null, null);\r\n                        _this._onLoad(moduleId);\r\n                        return;\r\n                    }\r\n                    recorder_1.record(10 /* BeginLoadingScript */, currentPath_1);\r\n                    _this._scriptLoader.load(_this, currentPath_1, function () {\r\n                        if (_this._config.isBuild()) {\r\n                            _this._buildInfoPath[moduleId] = currentPath_1;\r\n                        }\r\n                        recorder_1.record(11 /* EndLoadingScriptOK */, currentPath_1);\r\n                        _this._onLoad(moduleId);\r\n                    }, function (err) {\r\n                        recorder_1.record(12 /* EndLoadingScriptError */, currentPath_1);\r\n                        loadNextPath(err);\r\n                    });\r\n                }\r\n            };\r\n            loadNextPath(null);\r\n        };\r\n        /**\r\n         * Resolve a plugin dependency with the plugin loaded & complete\r\n         * @param module The module that has this dependency\r\n         * @param pluginDependency The semi-normalized dependency that appears in the module. e.g. 'vs/css!./mycssfile'. Only the plugin part (before !) is normalized\r\n         * @param plugin The plugin (what the plugin exports)\r\n         */\r\n        ModuleManager.prototype._loadPluginDependency = function (plugin, pluginDependency) {\r\n            var _this = this;\r\n            if (this._modules2[pluginDependency.id] || this._knownModules2[pluginDependency.id]) {\r\n                // known module\r\n                return;\r\n            }\r\n            this._knownModules2[pluginDependency.id] = true;\r\n            // Delegate the loading of the resource to the plugin\r\n            var load = (function (value) {\r\n                _this.defineModule(_this._moduleIdProvider.getStrModuleId(pluginDependency.id), [], value, null, null);\r\n            });\r\n            load.error = function (err) {\r\n                _this._config.onError(_this._createLoadError(pluginDependency.id, err));\r\n            };\r\n            plugin.load(pluginDependency.pluginParam, this._createRequire(ModuleIdResolver.ROOT), load, this._config.getOptionsLiteral());\r\n        };\r\n        /**\r\n         * Examine the dependencies of module 'module' and resolve them as needed.\r\n         */\r\n        ModuleManager.prototype._resolve = function (module) {\r\n            var _this = this;\r\n            var dependencies = module.dependencies;\r\n            if (dependencies) {\r\n                for (var i = 0, len = dependencies.length; i < len; i++) {\r\n                    var dependency = dependencies[i];\r\n                    if (dependency === RegularDependency.EXPORTS) {\r\n                        module.exportsPassedIn = true;\r\n                        module.unresolvedDependenciesCount--;\r\n                        continue;\r\n                    }\r\n                    if (dependency === RegularDependency.MODULE) {\r\n                        module.unresolvedDependenciesCount--;\r\n                        continue;\r\n                    }\r\n                    if (dependency === RegularDependency.REQUIRE) {\r\n                        module.unresolvedDependenciesCount--;\r\n                        continue;\r\n                    }\r\n                    var dependencyModule = this._modules2[dependency.id];\r\n                    if (dependencyModule && dependencyModule.isComplete()) {\r\n                        if (dependencyModule.error) {\r\n                            module.onDependencyError(dependencyModule.error);\r\n                            return;\r\n                        }\r\n                        module.unresolvedDependenciesCount--;\r\n                        continue;\r\n                    }\r\n                    if (this._hasDependencyPath(dependency.id, module.id)) {\r\n                        console.warn('There is a dependency cycle between \\'' + this._moduleIdProvider.getStrModuleId(dependency.id) + '\\' and \\'' + this._moduleIdProvider.getStrModuleId(module.id) + '\\'. The cyclic path follows:');\r\n                        var cyclePath = this._findCyclePath(dependency.id, module.id, 0) || [];\r\n                        cyclePath.reverse();\r\n                        cyclePath.push(dependency.id);\r\n                        console.warn(cyclePath.map(function (id) { return _this._moduleIdProvider.getStrModuleId(id); }).join(' => \\n'));\r\n                        // Break the cycle\r\n                        module.unresolvedDependenciesCount--;\r\n                        continue;\r\n                    }\r\n                    // record inverse dependency\r\n                    this._inverseDependencies2[dependency.id] = this._inverseDependencies2[dependency.id] || [];\r\n                    this._inverseDependencies2[dependency.id].push(module.id);\r\n                    if (dependency instanceof PluginDependency) {\r\n                        var plugin = this._modules2[dependency.pluginId];\r\n                        if (plugin && plugin.isComplete()) {\r\n                            this._loadPluginDependency(plugin.exports, dependency);\r\n                            continue;\r\n                        }\r\n                        // Record dependency for when the plugin gets loaded\r\n                        var inversePluginDeps = this._inversePluginDependencies2.get(dependency.pluginId);\r\n                        if (!inversePluginDeps) {\r\n                            inversePluginDeps = [];\r\n                            this._inversePluginDependencies2.set(dependency.pluginId, inversePluginDeps);\r\n                        }\r\n                        inversePluginDeps.push(dependency);\r\n                        this._loadModule(dependency.pluginId);\r\n                        continue;\r\n                    }\r\n                    this._loadModule(dependency.id);\r\n                }\r\n            }\r\n            if (module.unresolvedDependenciesCount === 0) {\r\n                this._onModuleComplete(module);\r\n            }\r\n        };\r\n        ModuleManager.prototype._onModuleComplete = function (module) {\r\n            var _this = this;\r\n            var recorder = this.getRecorder();\r\n            if (module.isComplete()) {\r\n                // already done\r\n                return;\r\n            }\r\n            var dependencies = module.dependencies;\r\n            var dependenciesValues = [];\r\n            if (dependencies) {\r\n                for (var i = 0, len = dependencies.length; i < len; i++) {\r\n                    var dependency = dependencies[i];\r\n                    if (dependency === RegularDependency.EXPORTS) {\r\n                        dependenciesValues[i] = module.exports;\r\n                        continue;\r\n                    }\r\n                    if (dependency === RegularDependency.MODULE) {\r\n                        dependenciesValues[i] = {\r\n                            id: module.strId,\r\n                            config: function () {\r\n                                return _this._config.getConfigForModule(module.strId);\r\n                            }\r\n                        };\r\n                        continue;\r\n                    }\r\n                    if (dependency === RegularDependency.REQUIRE) {\r\n                        dependenciesValues[i] = this._createRequire(module.moduleIdResolver);\r\n                        continue;\r\n                    }\r\n                    var dependencyModule = this._modules2[dependency.id];\r\n                    if (dependencyModule) {\r\n                        dependenciesValues[i] = dependencyModule.exports;\r\n                        continue;\r\n                    }\r\n                    dependenciesValues[i] = null;\r\n                }\r\n            }\r\n            module.complete(recorder, this._config, dependenciesValues);\r\n            // Fetch and clear inverse dependencies\r\n            var inverseDeps = this._inverseDependencies2[module.id];\r\n            this._inverseDependencies2[module.id] = null;\r\n            if (inverseDeps) {\r\n                // Resolve one inverse dependency at a time, always\r\n                // on the lookout for a completed module.\r\n                for (var i = 0, len = inverseDeps.length; i < len; i++) {\r\n                    var inverseDependencyId = inverseDeps[i];\r\n                    var inverseDependency = this._modules2[inverseDependencyId];\r\n                    inverseDependency.unresolvedDependenciesCount--;\r\n                    if (inverseDependency.unresolvedDependenciesCount === 0) {\r\n                        this._onModuleComplete(inverseDependency);\r\n                    }\r\n                }\r\n            }\r\n            var inversePluginDeps = this._inversePluginDependencies2.get(module.id);\r\n            if (inversePluginDeps) {\r\n                // This module is used as a plugin at least once\r\n                // Fetch and clear these inverse plugin dependencies\r\n                this._inversePluginDependencies2.delete(module.id);\r\n                // Resolve plugin dependencies one at a time\r\n                for (var i = 0, len = inversePluginDeps.length; i < len; i++) {\r\n                    this._loadPluginDependency(module.exports, inversePluginDeps[i]);\r\n                }\r\n            }\r\n        };\r\n        return ModuleManager;\r\n    }());\r\n    AMDLoader.ModuleManager = ModuleManager;\r\n})(AMDLoader || (AMDLoader = {}));\r\nvar define;\r\nvar AMDLoader;\r\n(function (AMDLoader) {\r\n    var env = new AMDLoader.Environment();\r\n    var moduleManager = null;\r\n    var DefineFunc = function (id, dependencies, callback) {\r\n        if (typeof id !== 'string') {\r\n            callback = dependencies;\r\n            dependencies = id;\r\n            id = null;\r\n        }\r\n        if (typeof dependencies !== 'object' || !Array.isArray(dependencies)) {\r\n            callback = dependencies;\r\n            dependencies = null;\r\n        }\r\n        if (!dependencies) {\r\n            dependencies = ['require', 'exports', 'module'];\r\n        }\r\n        if (id) {\r\n            moduleManager.defineModule(id, dependencies, callback, null, null);\r\n        }\r\n        else {\r\n            moduleManager.enqueueDefineAnonymousModule(dependencies, callback);\r\n        }\r\n    };\r\n    DefineFunc.amd = {\r\n        jQuery: true\r\n    };\r\n    var _requireFunc_config = function (params, shouldOverwrite) {\r\n        if (shouldOverwrite === void 0) { shouldOverwrite = false; }\r\n        moduleManager.configure(params, shouldOverwrite);\r\n    };\r\n    var RequireFunc = function () {\r\n        if (arguments.length === 1) {\r\n            if ((arguments[0] instanceof Object) && !Array.isArray(arguments[0])) {\r\n                _requireFunc_config(arguments[0]);\r\n                return;\r\n            }\r\n            if (typeof arguments[0] === 'string') {\r\n                return moduleManager.synchronousRequire(arguments[0]);\r\n            }\r\n        }\r\n        if (arguments.length === 2 || arguments.length === 3) {\r\n            if (Array.isArray(arguments[0])) {\r\n                moduleManager.defineModule(AMDLoader.Utilities.generateAnonymousModule(), arguments[0], arguments[1], arguments[2], null);\r\n                return;\r\n            }\r\n        }\r\n        throw new Error('Unrecognized require call');\r\n    };\r\n    RequireFunc.config = _requireFunc_config;\r\n    RequireFunc.getConfig = function () {\r\n        return moduleManager.getConfig().getOptionsLiteral();\r\n    };\r\n    RequireFunc.reset = function () {\r\n        moduleManager = moduleManager.reset();\r\n    };\r\n    RequireFunc.getBuildInfo = function () {\r\n        return moduleManager.getBuildInfo();\r\n    };\r\n    RequireFunc.getStats = function () {\r\n        return moduleManager.getLoaderEvents();\r\n    };\r\n    RequireFunc.define = function () {\r\n        return DefineFunc.apply(null, arguments);\r\n    };\r\n    function init() {\r\n        if (typeof AMDLoader.global.require !== 'undefined' || typeof require !== 'undefined') {\r\n            var _nodeRequire_1 = (AMDLoader.global.require || require);\r\n            if (typeof _nodeRequire_1 === 'function' && typeof _nodeRequire_1.resolve === 'function') {\r\n                // re-expose node's require function\r\n                var nodeRequire = function (what) {\r\n                    moduleManager.getRecorder().record(33 /* NodeBeginNativeRequire */, what);\r\n                    try {\r\n                        return _nodeRequire_1(what);\r\n                    }\r\n                    finally {\r\n                        moduleManager.getRecorder().record(34 /* NodeEndNativeRequire */, what);\r\n                    }\r\n                };\r\n                AMDLoader.global.nodeRequire = nodeRequire;\r\n                RequireFunc.nodeRequire = nodeRequire;\r\n                RequireFunc.__$__nodeRequire = nodeRequire;\r\n            }\r\n        }\r\n        if (env.isNode && !env.isElectronRenderer) {\r\n            module.exports = RequireFunc;\r\n            require = RequireFunc;\r\n        }\r\n        else {\r\n            if (!env.isElectronRenderer) {\r\n                AMDLoader.global.define = DefineFunc;\r\n            }\r\n            AMDLoader.global.require = RequireFunc;\r\n        }\r\n    }\r\n    AMDLoader.init = init;\r\n    if (typeof AMDLoader.global.define !== 'function' || !AMDLoader.global.define.amd) {\r\n        moduleManager = new AMDLoader.ModuleManager(env, AMDLoader.createScriptLoader(env), DefineFunc, RequireFunc, AMDLoader.Utilities.getHighPerformanceTimestamp());\r\n        // The global variable require can configure the loader\r\n        if (typeof AMDLoader.global.require !== 'undefined' && typeof AMDLoader.global.require !== 'function') {\r\n            RequireFunc.config(AMDLoader.global.require);\r\n        }\r\n        // This define is for the local closure defined in node in the case that the loader is concatenated\r\n        define = function () {\r\n            return DefineFunc.apply(null, arguments);\r\n        };\r\n        define.amd = DefineFunc.amd;\r\n        if (typeof doNotInitLoader === 'undefined') {\r\n            init();\r\n        }\r\n    }\r\n})(AMDLoader || (AMDLoader = {}));\r\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}