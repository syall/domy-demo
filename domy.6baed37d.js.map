{"version":3,"sources":["node_modules/domy-lang/bin/utils.js","node_modules/domy-lang/bin/lexer.js","node_modules/domy-lang/bin/parser.js","node_modules/domy-lang/bin/interpreter.js","domy.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["types","terop","binop","unop","paren","brack","comma","assign","saved","name","tokenTypes","expr","ternary","inv","block","loop","func","term","id","uno","and","xor","or","test","varDec","varAss","std","words","reserved","Set","operators","unaryOperators","binaryOperators","order","Map","ops","isIrrelevant","c","isComment","isOperator","has","isDoubleOperator","n","isParenthesis","isBracket","isComma","isEqual","alphabet","isAlphabetic","match","word","isWord","printError","fileContent","t","s","r","from","to","console","error","start","end","length","rightTrim","slice","trimRight","trimmed","trimLeft","offset","line","blank","repeat","Scope","parent","vars","current","value","get","undefined","set","search","DomyLexer","record","text","i","row","col","tokens","addToken","type","push","cur","past","str","Error","Infinity","options","table","DomyParser","results","parseError","peek","advance","statement","left","right","cond","args","arg_list","inv_list","not","expression","parseProgram","log","JSON","stringify","DomyInterpreter","global","add","arg","tree","evaluate","node","scope","terminal","identifier","ternaryOperation","unaryOperation","andExpression","xorExpression","orExpression","comparison","variableDeclaration","variableAssignment","parenthesisGroup","functionInvocation","blockGroup","reservedWord","loopGroup","functionDeclaration","find","ret","validate","declaration","assignment","reassign","v","values","next","window","runCode","editor","getValue","lexer","tokenize","parser","parse","pop","replace","document","createElement","getElementById","replaceWith","runner","out","innerHTML","appendChild","run","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","every","generated","js","clear","hmrApply","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","message","stack","overlay","createErrorOverlay","body","remove","stackTrace","innerText","getParents","modules","parents","k","d","dep","Array","isArray","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"domy.6baed37d.js","sourceRoot":"..","sourcesContent":["// Types\nexport const types = {\n    terop: 'ternary:operator',\n    binop: 'binary:operator',\n    unop: 'unary:operator',\n    paren: 'parenthesis:',\n    brack: 'parenthesis:',\n    comma: 'comma',\n    assign: 'assignment',\n    saved: 'reserved',\n    name: 'word'\n};\nexport const tokenTypes = {\n    expr: 'expression',\n    ternary: 'ternary-operation',\n    inv: 'function-invocation',\n    block: 'block',\n    saved: 'reserved',\n    loop: 'while-loop',\n    func: 'function-declaration',\n    term: 'terminal',\n    paren: 'parenthesis',\n    id: 'identifier',\n    uno: 'unary-operation',\n    and: 'and',\n    xor: 'xor',\n    or: 'or',\n    test: 'test',\n    varDec: 'variable-declaration',\n    varAss: 'variable-assignment',\n    std: 'std'\n};\n\n// Reserved Words\nexport const words = [\n    'true',\n    'false',\n    'my',\n    'do',\n    'while',\n    'return',\n    'break',\n    'continue',\n];\nexport const reserved = new Set(words);\n\n// Operators\nexport const operators = [\n    '?',\n    ':',\n    '!=',\n    '==',\n    '|',\n    '^',\n    '&',\n    '!',\n];\nexport const unaryOperators = [\n    '!'\n];\nexport const binaryOperators = [\n    '!=',\n    '==',\n    '|',\n    '^',\n    '&',\n];\nexport const order = new Map([\n    ['?', 40],\n    [':', 40],\n    ['!=', 50],\n    ['==', 50],\n    ['|', 60],\n    ['^', 70],\n    ['&', 80],\n    ['!', 90]\n]);\nexport const ops = new Set(operators);\n\n// Utility Functions\nexport const isIrrelevant = c => c <= ' ' || c === ';';\nexport const isComment = c => c === '#';\nexport const isOperator = c => ops.has(c);\nexport const isDoubleOperator = (c, n) =>\n    (c === '!' || c === '=') && n === '=';\nexport const isParenthesis = c => c === '(' || c === ')';\nexport const isBracket = c => c === '{' || c === '}';\nexport const isComma = c => c === ',';\nexport const isEqual = c => c === '=';\nexport const alphabet = /^[a-zA-Z]$/;\nexport const isAlphabetic = c => c.match(alphabet);\nexport const word = /^[-_a-zA-Z0-9]$/;\nexport const isWord = c => c && c.match(word);\n\n// Error\nexport const printError = (fileContent, t, s, r, c, from, to) => {\n    console.error(`${t} Error: ${s} at row ${r}, col ${c}.`);\n    let start, end;\n    for (start = from; start >= 0; start--)\n        if (fileContent[start] === '\\n')\n            break;\n    for (end = to; end < fileContent.length; end++)\n        if (fileContent[end] === '\\n')\n            break;\n    const rightTrim =\n        fileContent\n            .slice(start + 1, end)\n            .trimRight();\n    const trimmed = rightTrim.trimLeft();\n    const offset = c - (rightTrim.length - trimmed.length);\n    const line = `${r}: `;\n    const blank = ' '.repeat(line.length + offset - 1);\n    console.error(`${line}${trimmed}...`);\n    console.error(`${blank}^`);\n    console.error(`${blank}${c}`);\n};\n\nexport class Scope {\n\n    constructor(parent) {\n        this.parent = parent;\n        this.vars = new Map();\n    }\n\n    find(name) {\n        let current = this;\n        while (current !== null) {\n            const value = current.vars.get(name);\n            if (value !== undefined)\n                return value;\n            current = current.parent;\n        }\n        return undefined;\n    }\n\n    add(name, value) {\n        this.vars.set(name, value);\n    }\n\n    reassign(name, value) {\n        let current = this;\n        while (current !== null) {\n            const search = current.vars.get(name);\n            if (search !== undefined)\n                return current.vars.set(name, value);\n            current = current.parent;\n        }\n        return undefined;\n    }\n\n}\n","import {\n\ttypes,\n\treserved,\n\tisIrrelevant,\n\tisComment,\n\tisOperator,\n\tisDoubleOperator,\n\tisParenthesis,\n\tisBracket,\n\tisComma,\n\tisEqual,\n\tisAlphabetic,\n\tisWord,\n\tprintError\n} from './utils.js';\n\nexport default class DomyLexer {\n\n\tconstructor() {\n\t\t// Record of all Lexes\n\t\tthis.record = [];\n\t}\n\n\ttokenize(text) {\n\t\t// State\n\t\tlet i = 0;\n\t\tlet row = 1;\n\t\tlet col = 1;\n\n\t\t// Tokens\n\t\tconst tokens = [];\n\t\tconst addToken = (text, type, from, to, row, col) =>\n\t\t\ttokens.push({ text, type, from, to, row, col });\n\n\t\t// Text Traversal\n\t\twhile (i < text.length) {\n\t\t\tconst c = text[i];\n\t\t\tif (isIrrelevant(c)) { // Ignore Whitespace and ;\n\t\t\t\tif (c === '\\n') {\n\t\t\t\t\trow++;\n\t\t\t\t\tcol = 0;\n\t\t\t\t}\n\t\t\t} else if (isComment(c)) { // Single Line Comment #\n\t\t\t\tlet cur = text[i];\n\t\t\t\twhile (cur !== '\\n') {\n\t\t\t\t\ti++;\n\t\t\t\t\tcur = text[i];\n\t\t\t\t}\n\t\t\t\ti--;\n\t\t\t\tcol = 0;\n\t\t\t} else if (isDoubleOperator(c, text[i + 1])) { // ==, !=\n\t\t\t\taddToken(\n\t\t\t\t\t`${c}=`,\n\t\t\t\t\ttypes.binop,\n\t\t\t\t\ti,\n\t\t\t\t\ti + 2,\n\t\t\t\t\trow,\n\t\t\t\t\tcol\n\t\t\t\t);\n\t\t\t\ti++;\n\t\t\t\tcol++;\n\t\t\t} else if (isOperator(c)) { // :, &, |, ^, ?, !\n\t\t\t\tconst type =\n\t\t\t\t\tc === '?' || c === ':'\n\t\t\t\t\t\t? types.terop\n\t\t\t\t\t\t: c === '!'\n\t\t\t\t\t\t\t? types.unop\n\t\t\t\t\t\t\t: types.binop;\n\t\t\t\taddToken(\n\t\t\t\t\tc,\n\t\t\t\t\ttype,\n\t\t\t\t\ti,\n\t\t\t\t\ti + 1,\n\t\t\t\t\trow,\n\t\t\t\t\tcol\n\t\t\t\t);\n\t\t\t} else if (isEqual(c)) { // =\n\t\t\t\taddToken(\n\t\t\t\t\tc,\n\t\t\t\t\ttypes.assign,\n\t\t\t\t\ti,\n\t\t\t\t\ti + 1,\n\t\t\t\t\trow,\n\t\t\t\t\tcol\n\t\t\t\t);\n\t\t\t} else if (isParenthesis(c)) { // (, )\n\t\t\t\taddToken(\n\t\t\t\t\tc,\n\t\t\t\t\t`${types.paren}${c === '(' ? 'left' : 'right'}`,\n\t\t\t\t\ti,\n\t\t\t\t\ti + 1,\n\t\t\t\t\trow,\n\t\t\t\t\tcol\n\t\t\t\t);\n\t\t\t} else if (isBracket(c)) { // {, }\n\t\t\t\taddToken(\n\t\t\t\t\tc,\n\t\t\t\t\t`${types.brack}${c === '{' ? 'left' : 'right'}`,\n\t\t\t\t\ti,\n\t\t\t\t\ti + 1,\n\t\t\t\t\trow,\n\t\t\t\t\tcol\n\t\t\t\t);\n\t\t\t} else if (isComma(c)) { // ,\n\t\t\t\taddToken(\n\t\t\t\t\tc,\n\t\t\t\t\ttypes.comma,\n\t\t\t\t\ti,\n\t\t\t\t\ti + 1,\n\t\t\t\t\trow,\n\t\t\t\t\tcol\n\t\t\t\t);\n\t\t\t} else if (isAlphabetic(c)) { // Words\n\t\t\t\tlet past = i;\n\t\t\t\tlet str = '';\n\t\t\t\tlet cur = text[i];\n\t\t\t\twhile (isWord(cur)) {\n\t\t\t\t\tstr += cur;\n\t\t\t\t\ti++;\n\t\t\t\t\tcur = text[i];\n\t\t\t\t}\n\t\t\t\tconst type = reserved.has(str)\n\t\t\t\t\t? types.saved\n\t\t\t\t\t: types.name;\n\t\t\t\taddToken(\n\t\t\t\t\tstr,\n\t\t\t\t\ttype,\n\t\t\t\t\tpast,\n\t\t\t\t\ti--,\n\t\t\t\t\trow,\n\t\t\t\t\tcol\n\t\t\t\t);\n\t\t\t\tcol += i - past;\n\t\t\t} else { // No Match\n\t\t\t\tprintError(text, 'Lexer', `Unable to lex ${c}`, row, col, i, i);\n\t\t\t\tthrow new Error();\n\t\t\t}\n\t\t\ti++;\n\t\t\tcol++;\n\t\t}\n\n\t\t// Add End Token\n\t\taddToken(\n\t\t\t'(end)',\n\t\t\ttypes.saved,\n\t\t\t-1,\n\t\t\ttext.length,\n\t\t\tInfinity,\n\t\t\tInfinity\n\t\t);\n\n\t\t// Save to record\n\t\tthis.record.push(tokens);\n\n\t\t// Return tokens\n\t\treturn tokens;\n\t}\n\n\ttoString() {\n\t\tconst options = [\n\t\t\t'text',\n\t\t\t'row',\n\t\t\t'col'\n\t\t];\n\t\tconsole.table(this.record[this.record.length - 1], options);\n\t}\n\n}\n","import { types, tokenTypes, printError } from './utils.js';\n\nexport default class DomyParser {\n\n    constructor() {\n        // Record of all Parses\n        this.record = [];\n    }\n\n    parse(tokens, text) {\n\n        // State\n        let i = 0;\n        const results = [];\n\n        // Utility Functions\n        const parseError = s => {\n            const { from, to, row, col } = peek();\n            printError(text, 'Parser', s, row, col, from, to);\n            throw new Error();\n        };\n        const advance = (c, t) => {\n            const { text, type } = tokens[i];\n            if (c && c !== text)\n                parseError(`Expected '${c}' but got '${text}'`);\n            if (t && t !== type)\n                parseError(`Expected '${t}' but got '${type}'`);\n            return tokens[i++];\n        };\n        const peek = (offset = 0) => {\n            return tokens[i + offset] ? tokens[i + offset] : { text: '' };\n        };\n\n        // EBNF Grammar Functions\n        const term = () => {\n            const { text, type } = peek();\n            if (text === 'true') {\n                advance('true');\n                return {\n                    type: tokenTypes.term,\n                    value: true\n                };\n            } else if (text === 'false') {\n                advance('false');\n                return {\n                    type: tokenTypes.term,\n                    value: false\n                };\n            } else if (text === '(') {\n                advance('(');\n                const value = statement();\n                advance(')');\n                if (peek().text !== '?') {\n                    return {\n                        type: tokenTypes.paren,\n                        value\n                    };\n                }\n                advance('?');\n                let left;\n                if (peek().text === '{') {\n                    left = block();\n                } else {\n                    left = statement();\n                }\n                advance(':');\n                let right;\n                if (peek().text === '{') {\n                    right = block();\n                } else {\n                    right = statement();\n                }\n                return {\n                    type: tokenTypes.ternary,\n                    cond: value,\n                    left,\n                    right\n                };\n            } else if (text === 'return') {\n                advance('return');\n                if (peek().text !== '}')\n                    return {\n                        type: tokenTypes.saved,\n                        text,\n                        value: statement()\n                    };\n                else\n                    return {\n                        type: tokenTypes.saved,\n                        text,\n                    };\n            } else if (text === 'continue') {\n                advance('continue');\n                return {\n                    type: tokenTypes.saved,\n                    text,\n                };\n            } else if (text === 'break') {\n                advance('break');\n                return {\n                    type: tokenTypes.saved,\n                    text,\n                };\n            } else if (text === 'while') {\n                advance('while');\n                const cond = statement();\n                const value = block();\n                return {\n                    type: tokenTypes.loop,\n                    cond,\n                    value\n                };\n            } else if (text === 'do') {\n                advance('do');\n                const args = arg_list();\n                const value = block();\n                return {\n                    type: tokenTypes.func,\n                    args,\n                    value\n                };\n            } else if (text === '{') {\n                return block();\n            } else if (type === types.name) {\n                const name = advance(null, types.name);\n                if (peek().text === '(') {\n                    const args = inv_list();\n                    return {\n                        type: tokenTypes.inv,\n                        name: name.text,\n                        args\n                    };\n                }\n                return {\n                    type: tokenTypes.id,\n                    name: name.text\n                };\n            } else if (text === '(end)') {\n                parseError('Reached end of input');\n            } else parseError('Term could not be parsed');\n        };\n        const not = () => {\n            if (peek().text === '!') {\n                advance('!');\n                const value = term();\n                return {\n                    type: tokenTypes.uno,\n                    value\n                };\n            } else return term();\n        };\n        const and = () => {\n            const left = not();\n            if (peek().text === '&') {\n                advance('&');\n                const right = and();\n                return {\n                    type: tokenTypes.and,\n                    left,\n                    right\n                };\n            } else return left;\n        };\n        const xor = () => {\n            const left = and();\n            if (peek().text === '^') {\n                advance('^');\n                const right = xor();\n                return {\n                    type: tokenTypes.xor,\n                    left,\n                    right\n                };\n            } else return left;\n        };\n        const or = () => {\n            const left = xor();\n            if (peek().text === '|') {\n                advance('|');\n                const right = or();\n                return {\n                    type: tokenTypes.or,\n                    left,\n                    right\n                };\n            } else return left;\n        };\n        const expression = () => {\n            const left = or();\n            if (peek().text === '==') {\n                advance('==');\n                const right = expression();\n                return {\n                    type: tokenTypes.test,\n                    value: '==',\n                    left,\n                    right\n                };\n            } else if (peek().text === '!=') {\n                advance('!=');\n                const right = expression();\n                return {\n                    type: tokenTypes.test,\n                    value: '!=',\n                    left,\n                    right\n                };\n            } else return left;\n        };\n        const inv = () => {\n            return statement();\n        };\n        const inv_list = () => {\n            const args = [];\n            advance('(');\n            while (peek().text !== ')') {\n                args.push(inv());\n                if (peek().text === ',')\n                    advance(',');\n            }\n            advance(')');\n            return args;\n        };\n        const arg_list = () => {\n            const args = [];\n            advance('(');\n            while (peek().text !== ')') {\n                args.push(advance(null, types.name));\n                if (peek().text === ',')\n                    advance(',');\n            }\n            advance(')');\n            return args;\n        };\n        const block = () => {\n            const value = [];\n            advance('{');\n            while (peek().text !== '}') {\n                value.push(statement());\n            }\n            advance('}');\n            return {\n                type: tokenTypes.block,\n                value\n            };\n        };\n        const statement = () => {\n            if (peek().text === 'my') {\n                advance('my');\n                const name = advance(null, types.name);\n                advance('=');\n                const value = statement();\n                return {\n                    type: tokenTypes.varDec,\n                    name: name.text,\n                    value\n                };\n            } else if (peek(1).text === '=') {\n                const name = advance(null, types.name);\n                advance('=');\n                const value = statement();\n                return {\n                    type: tokenTypes.varAss,\n                    name: name.text,\n                    value\n                };\n            } else return expression();\n        };\n        const parseProgram = () => {\n            while (peek().text !== '(end)')\n                results.push(statement());\n        };\n\n        // Parse Program\n        parseProgram();\n\n        // Save to Record\n        this.record.push(results);\n\n        // Return Statements\n        return results;\n    }\n\n    toString() {\n        const options = [\n            'type',\n            'name',\n            'text',\n            'args',\n            'cond',\n            'left',\n            'right',\n            'result',\n            'value',\n        ];\n        console.log(JSON.stringify(\n            this.record[this.record.length - 1],\n            options,\n            '  |'\n        ));\n    }\n\n}\n","import { tokenTypes, Scope } from './utils.js';\n\nexport default class DomyInterpreter {\n\n    constructor() {\n        this.global = new Scope(null);\n        this.global.add('print', {\n            type: tokenTypes.std,\n            args: ['toPrint'],\n            value: arg => {\n                console.log(JSON.stringify(\n                    arg.type === tokenTypes.func\n                        ? arg\n                        : arg.value,\n                    [\n                        'name', 'text', 'type', 'args',\n                        'value', 'cond', 'left', 'right'\n                    ],\n                    2\n                ));\n                return { value: true };\n            }\n        });\n    }\n\n    run(tree) {\n        for (const statement of tree)\n            this.evaluate(statement, this.global);\n    }\n\n    evaluate(node, scope) {\n        switch (node.type) {\n            case tokenTypes.term:\n                return this.terminal(node, scope);\n            case tokenTypes.id:\n                return this.identifier(node, scope);\n            case tokenTypes.ternary:\n                return this.ternaryOperation(node, scope);\n            case tokenTypes.uno:\n                return this.unaryOperation(node, scope);\n            case tokenTypes.and:\n                return this.andExpression(node, scope);\n            case tokenTypes.xor:\n                return this.xorExpression(node, scope);\n            case tokenTypes.or:\n                return this.orExpression(node, scope);\n            case tokenTypes.test:\n                return this.comparison(node, scope);\n            case tokenTypes.varDec:\n                return this.variableDeclaration(node, scope);\n            case tokenTypes.varAss:\n                return this.variableAssignment(node, scope);\n            case tokenTypes.paren:\n                return this.parenthesisGroup(node, scope);\n            case tokenTypes.inv:\n                return this.functionInvocation(node, scope);\n            case tokenTypes.block:\n                return this.blockGroup(node, scope);\n            case tokenTypes.saved:\n                return this.reservedWord(node, scope);\n            case tokenTypes.loop:\n                return this.loopGroup(node, scope);\n            case tokenTypes.func:\n                return this.functionDeclaration(node, scope);\n            default:\n                throw new Error('Invalid Token Type.');\n        }\n    }\n\n    terminal(node, scope) {\n        return { value: node.value };\n    }\n\n    identifier(node, scope) {\n        return scope.find(node.name);\n    }\n\n    ternaryOperation(node, scope) {\n        if (node.left.type === tokenTypes.saved)\n            throw new Error('Reserved words not allowed in condition');\n        const cond = this.evaluate(node.cond, scope);\n        const { value, type, ret } = this.evaluate(\n            cond.value\n                ? node.left\n                : node.right,\n            scope\n        );\n        return { value: ret || value, type };\n    }\n\n    unaryOperation(node, scope) {\n        if (node.value.type === tokenTypes.saved)\n            throw new Error('Reserved words only allowed in blocks');\n        return {\n            value:\n                !(node.value.type === tokenTypes.block\n                    ? this.validate(this.evaluate(node.value, scope)).value\n                    : this.evaluate(node.value, scope).value)\n        };\n    }\n\n    andExpression(node, scope) {\n        const left = this.evaluate(node.left, scope);\n        if (!left.value)\n            return { value: left.value, type: left.type, ret: left.ret };\n        const right = this.evaluate(node.right, scope);\n        const value = right.ret === undefined\n            ? left.value && right.value\n            : left.value && right.ret;\n        return { value, type: right.type };\n    }\n\n    xorExpression(node, scope) {\n        const left = this.evaluate(node.left, scope);\n        if (left.type)\n            return { value: left.value, type: left.type, ret: left.ret };\n        const right = this.evaluate(node.right, scope);\n        const value = right.ret === undefined\n            ? (left.value && !right.value) || (!left.value && right.value)\n            : (left.value && !right.ret) || (!left.value && right.ret);\n        return { value, type: right.type };\n    }\n\n    orExpression(node, scope) {\n        const left = this.evaluate(node.left, scope);\n        if (left.value || left.type)\n            return { value: left.value, type: left.type, ret: left.ret };\n        const right = this.evaluate(node.right, scope);\n        return { value: right.ret || right.value, type: right.type };\n    }\n\n    comparison(node, scope) {\n        if (node.left.type === tokenTypes.saved ||\n            node.right.type === tokenTypes.saved)\n            throw new Error('Reserved words only allowed in blocks');\n        if (node.value === '==') return {\n            value:\n                (node.left.type === tokenTypes.block\n                    ? this.validate(this.evaluate(node.left, scope)).value\n                    : this.evaluate(node.left, scope).value) ===\n                (node.right.type === tokenTypes.block\n                    ? this.validate(this.evaluate(node.right, scope)).value\n                    : this.evaluate(node.right, scope).value)\n        };\n        else return {\n            value:\n                (node.left.type === tokenTypes.block\n                    ? this.validate(this.evaluate(node.left, scope)).value\n                    : this.evaluate(node.left, scope).value) !==\n                (node.right.type === tokenTypes.block\n                    ? this.validate(this.evaluate(node.right, scope)).value\n                    : this.evaluate(node.right, scope).value)\n        };\n    }\n\n    variableDeclaration(node, scope) {\n        if (node.value.type === tokenTypes.saved)\n            throw new Error('Reserved words only allowed in blocks');\n        const declaration = scope.find(node.name);\n        if (declaration !== undefined)\n            throw new Error(`${node.name} is already defined.`);\n        scope.add(\n            node.name,\n            node.value.type === tokenTypes.block\n                ? this.validate(this.evaluate(node.value, scope))\n                : this.evaluate(node.value, scope)\n        );\n        return { value: true };\n    }\n\n    variableAssignment(node, scope) {\n        if (node.value.type === tokenTypes.saved)\n            throw new Error('Reserved words only allowed in blocks');\n        const assignment = scope.find(node.name);\n        if (assignment === undefined)\n            throw new Error(`${node.name} is undefined.`);\n        scope.reassign(\n            node.name,\n            node.value.type === tokenTypes.block\n                ? this.validate(this.evaluate(node.value, scope))\n                : this.evaluate(node.value, scope)\n        );\n        return { value: true };\n    }\n\n    validate(v) {\n        const { value, type, ret } = v;\n        if (type === 'return' && ret !== undefined)\n            return ret;\n        else if (type !== undefined)\n            throw new Error(`Invalid type: ${type}.`);\n        else\n            return { value };\n    }\n\n    parenthesisGroup(node, scope) {\n        if (node.value.type === tokenTypes.saved)\n            throw new Error('Reserved words only allowed in blocks');\n        return this.evaluate(node.value, scope);\n    }\n\n    functionInvocation(node, scope) {\n        const func = scope.find(node.name);\n        if (func === undefined)\n            throw new Error(`Function ${node.name} is not defined.`);\n        if (func.args.length !== node.args.length)\n            throw new Error(`Argument Length does not match.`);\n        if (func.type === tokenTypes.std) {\n            const values = [];\n            for (const arg of node.args) {\n                values.push(\n                    arg.type === tokenTypes.id\n                        ? scope.find(arg.name)\n                        : arg.type === tokenTypes.block\n                            ? this.validate(this.evaluate(arg.value, scope))\n                            : this.evaluate(\n                                arg.value !== undefined\n                                    ? arg.value\n                                    : arg,\n                                scope)\n                );\n            }\n            return this.validate(func.value(...values));\n        } else {\n            const next = new Scope(scope);\n            for (let i = 0; i < func.args.length; i++) {\n                next.add(\n                    func.args[i].text,\n                    node.args[i].type === tokenTypes.id\n                        ? scope.find(node.args[i].text)\n                        : node.args[i].type === tokenTypes.block\n                            ? this.validate(this.evaluate(node.args[i], scope))\n                            : this.evaluate(node.args[i], scope)\n                );\n            }\n            return this.validate(this.evaluate(func.value, next));\n        }\n    }\n\n    blockGroup(node, scope) {\n        const next = new Scope(scope);\n        for (const statement of node.value) {\n            const { value, type, ret } = this.evaluate(statement, next);\n            if (type !== undefined)\n                return { value, type, ret };\n        }\n        return { value: true };\n    }\n\n    reservedWord(node, scope) {\n        if (node.text === 'return')\n            return {\n                value: true, type: 'return',\n                ret:\n                    node.value !== undefined\n                        ? node.value.type === tokenTypes.block\n                            ? this.validate(this.evaluate(node.value, scope))\n                            : this.evaluate(node.value, scope)\n                        : undefined\n            };\n        if (node.text === 'continue')\n            return { value: true, type: 'continue' };\n        if (node.text === 'break')\n            return { value: true, type: 'break' };\n    }\n\n    loopGroup(node, scope) {\n        if (node.cond.type === tokenTypes.saved)\n            throw new Error('Reserved words only allowed in blocks');\n        while (true) {\n            const cond = node.cond.type === tokenTypes.block\n                ? this.validate(this.evaluate(node.cond, scope))\n                : this.evaluate(node.cond, scope);\n            if (!cond.value)\n                break;\n            const next = new Scope(scope);\n            const { value, type, ret } = this.evaluate(node.value, next);\n            if (type === 'return')\n                return { value: ret !== undefined ? ret : value };\n            if (type === 'break')\n                break;\n            if (type === 'continue')\n                continue;\n        }\n        return { value: true };\n    }\n\n    functionDeclaration(node, scope) {\n        return node;\n    }\n\n}\n","import DomyLexer from '/node_modules/domy-lang/bin/lexer.js';\nimport DomyParser from '/node_modules/domy-lang/bin/parser.js';\nimport DomyInterpreter from '/node_modules/domy-lang/bin/interpreter.js';\nimport { tokenTypes } from '/node_modules/domy-lang/bin/utils.js';\n\nwindow.runCode = function runCode() {\n\n    // Code\n    const text = editor.getValue();\n\n    // Lexer\n    const lexer = new DomyLexer();\n    lexer.tokenize(text);\n\n    // Parser\n    const parser = new DomyParser();\n    parser.parse(lexer.record.pop(), text);\n\n    // Output\n    const replace = document.createElement('code');\n    replace.id = 'terminal';\n    document.getElementById('terminal').replaceWith(replace);\n\n    // Interpreter\n    const runner = new DomyInterpreter();\n    runner.global.reassign('print', {\n        type: tokenTypes.std,\n        args: ['toPrint'],\n        value: arg => {\n            const out = JSON.stringify(\n                arg.type === tokenTypes.func\n                    ? arg\n                    : arg.value,\n                [\n                    'name', 'text', 'type', 'args',\n                    'value', 'cond', 'left', 'right'\n                ],\n                2\n            );\n            const node = document.createElement('div');\n            node.innerHTML = out;\n            replace.appendChild(node);\n            return { value: true };\n        }\n    });\n    runner.run(parser.record.pop());\n\n}\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}